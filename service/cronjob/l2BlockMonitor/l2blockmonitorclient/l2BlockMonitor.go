// Code generated by goctl. DO NOT EDIT!
// Source: l2BlockMonitor.proto

package l2blockmonitorclient

import (
	"context"
	l2BlockMonitor2 "github.com/zecrey-labs/zecrey-legend/service/cronjob/l2BlockMonitor/l2BlockMonitor"
	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	Request  = l2BlockMonitor2.Request
	Response = l2BlockMonitor2.Response

	L2BlockMonitor interface {
		Ping(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error)
	}

	defaultL2BlockMonitor struct {
		cli zrpc.Client
	}
)

func NewL2BlockMonitor(cli zrpc.Client) L2BlockMonitor {
	return &defaultL2BlockMonitor{
		cli: cli,
	}
}

func (m *defaultL2BlockMonitor) Ping(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	client := l2BlockMonitor2.NewL2BlockMonitorClient(m.cli.Conn())
	return client.Ping(ctx, in, opts...)
}
