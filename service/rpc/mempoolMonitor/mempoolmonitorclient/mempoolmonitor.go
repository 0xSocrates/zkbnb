// Code generated by goctl. DO NOT EDIT!
// Source: mempoolMonitor.proto

package mempoolmonitorclient

import (
	"context"
	mempoolmonitor "github.com/zecrey-labs/zecrey-legend/service/rpc/mempoolMonitor/mempoolMonitor"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	Request  = mempoolmonitor.Request
	Response = mempoolmonitor.Response

	MempoolMonitor interface {
		Ping(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error)
	}

	defaultMempoolMonitor struct {
		cli zrpc.Client
	}
)

func NewMempoolMonitor(cli zrpc.Client) MempoolMonitor {
	return &defaultMempoolMonitor{
		cli: cli,
	}
}

func (m *defaultMempoolMonitor) Ping(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	client := mempoolmonitor.NewMempoolMonitorClient(m.cli.Conn())
	return client.Ping(ctx, in, opts...)
}
