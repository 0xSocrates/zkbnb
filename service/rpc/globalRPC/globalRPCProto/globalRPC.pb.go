// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.17.3
// source: globalRPC.proto

package globalRPCProto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

//
//Proto Name: getLatestAccountLockAsset
//Description: get latest lock info from LockDelta
type ReqGetLatestAccountLockAsset struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountIndex uint64 `protobuf:"varint,1,opt,name=AccountIndex,proto3" json:"AccountIndex,omitempty"`
	AssetId      uint64 `protobuf:"varint,2,opt,name=AssetId,proto3" json:"AssetId,omitempty"`
	ChainId      uint64 `protobuf:"varint,3,opt,name=ChainId,proto3" json:"ChainId,omitempty"`
}

func (x *ReqGetLatestAccountLockAsset) Reset() {
	*x = ReqGetLatestAccountLockAsset{}
	if protoimpl.UnsafeEnabled {
		mi := &file_globalRPC_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqGetLatestAccountLockAsset) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqGetLatestAccountLockAsset) ProtoMessage() {}

func (x *ReqGetLatestAccountLockAsset) ProtoReflect() protoreflect.Message {
	mi := &file_globalRPC_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqGetLatestAccountLockAsset.ProtoReflect.Descriptor instead.
func (*ReqGetLatestAccountLockAsset) Descriptor() ([]byte, []int) {
	return file_globalRPC_proto_rawDescGZIP(), []int{0}
}

func (x *ReqGetLatestAccountLockAsset) GetAccountIndex() uint64 {
	if x != nil {
		return x.AccountIndex
	}
	return 0
}

func (x *ReqGetLatestAccountLockAsset) GetAssetId() uint64 {
	if x != nil {
		return x.AssetId
	}
	return 0
}

func (x *ReqGetLatestAccountLockAsset) GetChainId() uint64 {
	if x != nil {
		return x.ChainId
	}
	return 0
}

type ResultGetLatestAccountLockAsset struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// primary key
	LockAssetId uint64 `protobuf:"varint,1,opt,name=LockAssetId,proto3" json:"LockAssetId,omitempty"`
	// account index
	AccountIndex uint32 `protobuf:"varint,2,opt,name=AccountIndex,proto3" json:"AccountIndex,omitempty"`
	// left asset id
	AssetId uint32 `protobuf:"varint,3,opt,name=AssetId,proto3" json:"AssetId,omitempty"`
	// asset name
	AssetName string `protobuf:"bytes,4,opt,name=AssetName,proto3" json:"AssetName,omitempty"`
	// chain id
	ChainId uint32 `protobuf:"varint,5,opt,name=ChainId,proto3" json:"ChainId,omitempty"`
	// value
	LockedAmount uint64 `protobuf:"varint,6,opt,name=LockedAmount,proto3" json:"LockedAmount,omitempty"`
}

func (x *ResultGetLatestAccountLockAsset) Reset() {
	*x = ResultGetLatestAccountLockAsset{}
	if protoimpl.UnsafeEnabled {
		mi := &file_globalRPC_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResultGetLatestAccountLockAsset) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResultGetLatestAccountLockAsset) ProtoMessage() {}

func (x *ResultGetLatestAccountLockAsset) ProtoReflect() protoreflect.Message {
	mi := &file_globalRPC_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResultGetLatestAccountLockAsset.ProtoReflect.Descriptor instead.
func (*ResultGetLatestAccountLockAsset) Descriptor() ([]byte, []int) {
	return file_globalRPC_proto_rawDescGZIP(), []int{1}
}

func (x *ResultGetLatestAccountLockAsset) GetLockAssetId() uint64 {
	if x != nil {
		return x.LockAssetId
	}
	return 0
}

func (x *ResultGetLatestAccountLockAsset) GetAccountIndex() uint32 {
	if x != nil {
		return x.AccountIndex
	}
	return 0
}

func (x *ResultGetLatestAccountLockAsset) GetAssetId() uint32 {
	if x != nil {
		return x.AssetId
	}
	return 0
}

func (x *ResultGetLatestAccountLockAsset) GetAssetName() string {
	if x != nil {
		return x.AssetName
	}
	return ""
}

func (x *ResultGetLatestAccountLockAsset) GetChainId() uint32 {
	if x != nil {
		return x.ChainId
	}
	return 0
}

func (x *ResultGetLatestAccountLockAsset) GetLockedAmount() uint64 {
	if x != nil {
		return x.LockedAmount
	}
	return 0
}

type RespGetLatestAccountLockAsset struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status int64                            `protobuf:"varint,1,opt,name=Status,proto3" json:"Status,omitempty"`
	Msg    string                           `protobuf:"bytes,2,opt,name=Msg,proto3" json:"Msg,omitempty"`
	Err    string                           `protobuf:"bytes,3,opt,name=Err,proto3" json:"Err,omitempty"`
	Result *ResultGetLatestAccountLockAsset `protobuf:"bytes,4,opt,name=Result,proto3" json:"Result,omitempty"`
}

func (x *RespGetLatestAccountLockAsset) Reset() {
	*x = RespGetLatestAccountLockAsset{}
	if protoimpl.UnsafeEnabled {
		mi := &file_globalRPC_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespGetLatestAccountLockAsset) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespGetLatestAccountLockAsset) ProtoMessage() {}

func (x *RespGetLatestAccountLockAsset) ProtoReflect() protoreflect.Message {
	mi := &file_globalRPC_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespGetLatestAccountLockAsset.ProtoReflect.Descriptor instead.
func (*RespGetLatestAccountLockAsset) Descriptor() ([]byte, []int) {
	return file_globalRPC_proto_rawDescGZIP(), []int{2}
}

func (x *RespGetLatestAccountLockAsset) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *RespGetLatestAccountLockAsset) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *RespGetLatestAccountLockAsset) GetErr() string {
	if x != nil {
		return x.Err
	}
	return ""
}

func (x *RespGetLatestAccountLockAsset) GetResult() *ResultGetLatestAccountLockAsset {
	if x != nil {
		return x.Result
	}
	return nil
}

//
//Proto Name: getLatestAccountLockInfoByAccountIndex
//Description: get latest lock info from LockDelta by account index
type ReqGetLatestAccountLockInfoByAccountIndex struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountIndex uint64 `protobuf:"varint,1,opt,name=AccountIndex,proto3" json:"AccountIndex,omitempty"`
}

func (x *ReqGetLatestAccountLockInfoByAccountIndex) Reset() {
	*x = ReqGetLatestAccountLockInfoByAccountIndex{}
	if protoimpl.UnsafeEnabled {
		mi := &file_globalRPC_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqGetLatestAccountLockInfoByAccountIndex) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqGetLatestAccountLockInfoByAccountIndex) ProtoMessage() {}

func (x *ReqGetLatestAccountLockInfoByAccountIndex) ProtoReflect() protoreflect.Message {
	mi := &file_globalRPC_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqGetLatestAccountLockInfoByAccountIndex.ProtoReflect.Descriptor instead.
func (*ReqGetLatestAccountLockInfoByAccountIndex) Descriptor() ([]byte, []int) {
	return file_globalRPC_proto_rawDescGZIP(), []int{3}
}

func (x *ReqGetLatestAccountLockInfoByAccountIndex) GetAccountIndex() uint64 {
	if x != nil {
		return x.AccountIndex
	}
	return 0
}

type ResultGetLatestAccountLockInfoByAccountIndex struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// primary key
	LockAssetId uint64 `protobuf:"varint,1,opt,name=LockAssetId,proto3" json:"LockAssetId,omitempty"`
	// account index
	AccountIndex uint32 `protobuf:"varint,2,opt,name=AccountIndex,proto3" json:"AccountIndex,omitempty"`
	// left asset id
	AssetId uint32 `protobuf:"varint,3,opt,name=AssetId,proto3" json:"AssetId,omitempty"`
	// asset name
	AssetName string `protobuf:"bytes,4,opt,name=AssetName,proto3" json:"AssetName,omitempty"`
	// chain id
	ChainId uint32 `protobuf:"varint,5,opt,name=ChainId,proto3" json:"ChainId,omitempty"`
	// value
	LockedAmount uint64 `protobuf:"varint,6,opt,name=LockedAmount,proto3" json:"LockedAmount,omitempty"`
}

func (x *ResultGetLatestAccountLockInfoByAccountIndex) Reset() {
	*x = ResultGetLatestAccountLockInfoByAccountIndex{}
	if protoimpl.UnsafeEnabled {
		mi := &file_globalRPC_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResultGetLatestAccountLockInfoByAccountIndex) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResultGetLatestAccountLockInfoByAccountIndex) ProtoMessage() {}

func (x *ResultGetLatestAccountLockInfoByAccountIndex) ProtoReflect() protoreflect.Message {
	mi := &file_globalRPC_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResultGetLatestAccountLockInfoByAccountIndex.ProtoReflect.Descriptor instead.
func (*ResultGetLatestAccountLockInfoByAccountIndex) Descriptor() ([]byte, []int) {
	return file_globalRPC_proto_rawDescGZIP(), []int{4}
}

func (x *ResultGetLatestAccountLockInfoByAccountIndex) GetLockAssetId() uint64 {
	if x != nil {
		return x.LockAssetId
	}
	return 0
}

func (x *ResultGetLatestAccountLockInfoByAccountIndex) GetAccountIndex() uint32 {
	if x != nil {
		return x.AccountIndex
	}
	return 0
}

func (x *ResultGetLatestAccountLockInfoByAccountIndex) GetAssetId() uint32 {
	if x != nil {
		return x.AssetId
	}
	return 0
}

func (x *ResultGetLatestAccountLockInfoByAccountIndex) GetAssetName() string {
	if x != nil {
		return x.AssetName
	}
	return ""
}

func (x *ResultGetLatestAccountLockInfoByAccountIndex) GetChainId() uint32 {
	if x != nil {
		return x.ChainId
	}
	return 0
}

func (x *ResultGetLatestAccountLockInfoByAccountIndex) GetLockedAmount() uint64 {
	if x != nil {
		return x.LockedAmount
	}
	return 0
}

type RespGetLatestAccountLockInfoByAccountIndex struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status int64                                           `protobuf:"varint,1,opt,name=Status,proto3" json:"Status,omitempty"`
	Msg    string                                          `protobuf:"bytes,2,opt,name=Msg,proto3" json:"Msg,omitempty"`
	Err    string                                          `protobuf:"bytes,3,opt,name=Err,proto3" json:"Err,omitempty"`
	Result []*ResultGetLatestAccountLockInfoByAccountIndex `protobuf:"bytes,4,rep,name=Result,proto3" json:"Result,omitempty"`
}

func (x *RespGetLatestAccountLockInfoByAccountIndex) Reset() {
	*x = RespGetLatestAccountLockInfoByAccountIndex{}
	if protoimpl.UnsafeEnabled {
		mi := &file_globalRPC_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespGetLatestAccountLockInfoByAccountIndex) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespGetLatestAccountLockInfoByAccountIndex) ProtoMessage() {}

func (x *RespGetLatestAccountLockInfoByAccountIndex) ProtoReflect() protoreflect.Message {
	mi := &file_globalRPC_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespGetLatestAccountLockInfoByAccountIndex.ProtoReflect.Descriptor instead.
func (*RespGetLatestAccountLockInfoByAccountIndex) Descriptor() ([]byte, []int) {
	return file_globalRPC_proto_rawDescGZIP(), []int{5}
}

func (x *RespGetLatestAccountLockInfoByAccountIndex) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *RespGetLatestAccountLockInfoByAccountIndex) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *RespGetLatestAccountLockInfoByAccountIndex) GetErr() string {
	if x != nil {
		return x.Err
	}
	return ""
}

func (x *RespGetLatestAccountLockInfoByAccountIndex) GetResult() []*ResultGetLatestAccountLockInfoByAccountIndex {
	if x != nil {
		return x.Result
	}
	return nil
}

//
//Proto Name: getLatestAccountLp
//Description: get latest account lp from LPDelta
type ReqGetLatestAccountLp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountIndex uint64 `protobuf:"varint,1,opt,name=AccountIndex,proto3" json:"AccountIndex,omitempty"`
	PairIndex    uint64 `protobuf:"varint,2,opt,name=PairIndex,proto3" json:"PairIndex,omitempty"`
}

func (x *ReqGetLatestAccountLp) Reset() {
	*x = ReqGetLatestAccountLp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_globalRPC_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqGetLatestAccountLp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqGetLatestAccountLp) ProtoMessage() {}

func (x *ReqGetLatestAccountLp) ProtoReflect() protoreflect.Message {
	mi := &file_globalRPC_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqGetLatestAccountLp.ProtoReflect.Descriptor instead.
func (*ReqGetLatestAccountLp) Descriptor() ([]byte, []int) {
	return file_globalRPC_proto_rawDescGZIP(), []int{6}
}

func (x *ReqGetLatestAccountLp) GetAccountIndex() uint64 {
	if x != nil {
		return x.AccountIndex
	}
	return 0
}

func (x *ReqGetLatestAccountLp) GetPairIndex() uint64 {
	if x != nil {
		return x.PairIndex
	}
	return 0
}

type ResultGetLatestAccountLp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// primary key
	LiquidityId uint64 `protobuf:"varint,1,opt,name=LiquidityId,proto3" json:"LiquidityId,omitempty"`
	// account index
	AccountIndex uint32 `protobuf:"varint,2,opt,name=AccountIndex,proto3" json:"AccountIndex,omitempty"`
	// left asset id
	AssetAId uint32 `protobuf:"varint,3,opt,name=AssetAId,proto3" json:"AssetAId,omitempty"`
	// asset a name
	AssetAName string `protobuf:"bytes,4,opt,name=AssetAName,proto3" json:"AssetAName,omitempty"`
	// right asset id
	AssetBId uint32 `protobuf:"varint,5,opt,name=AssetBId,proto3" json:"AssetBId,omitempty"`
	// asset b name
	AssetBName string `protobuf:"bytes,6,opt,name=AssetBName,proto3" json:"AssetBName,omitempty"`
	// pair index
	PairIndex uint32 `protobuf:"varint,7,opt,name=PairIndex,proto3" json:"PairIndex,omitempty"`
	// LP token encryption
	LpEnc string `protobuf:"bytes,8,opt,name=LpEnc,proto3" json:"LpEnc,omitempty"`
}

func (x *ResultGetLatestAccountLp) Reset() {
	*x = ResultGetLatestAccountLp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_globalRPC_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResultGetLatestAccountLp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResultGetLatestAccountLp) ProtoMessage() {}

func (x *ResultGetLatestAccountLp) ProtoReflect() protoreflect.Message {
	mi := &file_globalRPC_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResultGetLatestAccountLp.ProtoReflect.Descriptor instead.
func (*ResultGetLatestAccountLp) Descriptor() ([]byte, []int) {
	return file_globalRPC_proto_rawDescGZIP(), []int{7}
}

func (x *ResultGetLatestAccountLp) GetLiquidityId() uint64 {
	if x != nil {
		return x.LiquidityId
	}
	return 0
}

func (x *ResultGetLatestAccountLp) GetAccountIndex() uint32 {
	if x != nil {
		return x.AccountIndex
	}
	return 0
}

func (x *ResultGetLatestAccountLp) GetAssetAId() uint32 {
	if x != nil {
		return x.AssetAId
	}
	return 0
}

func (x *ResultGetLatestAccountLp) GetAssetAName() string {
	if x != nil {
		return x.AssetAName
	}
	return ""
}

func (x *ResultGetLatestAccountLp) GetAssetBId() uint32 {
	if x != nil {
		return x.AssetBId
	}
	return 0
}

func (x *ResultGetLatestAccountLp) GetAssetBName() string {
	if x != nil {
		return x.AssetBName
	}
	return ""
}

func (x *ResultGetLatestAccountLp) GetPairIndex() uint32 {
	if x != nil {
		return x.PairIndex
	}
	return 0
}

func (x *ResultGetLatestAccountLp) GetLpEnc() string {
	if x != nil {
		return x.LpEnc
	}
	return ""
}

type RespGetLatestAccountLp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status int64                     `protobuf:"varint,1,opt,name=Status,proto3" json:"Status,omitempty"`
	Msg    string                    `protobuf:"bytes,2,opt,name=Msg,proto3" json:"Msg,omitempty"`
	Err    string                    `protobuf:"bytes,3,opt,name=Err,proto3" json:"Err,omitempty"`
	Result *ResultGetLatestAccountLp `protobuf:"bytes,4,opt,name=Result,proto3" json:"Result,omitempty"`
}

func (x *RespGetLatestAccountLp) Reset() {
	*x = RespGetLatestAccountLp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_globalRPC_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespGetLatestAccountLp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespGetLatestAccountLp) ProtoMessage() {}

func (x *RespGetLatestAccountLp) ProtoReflect() protoreflect.Message {
	mi := &file_globalRPC_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespGetLatestAccountLp.ProtoReflect.Descriptor instead.
func (*RespGetLatestAccountLp) Descriptor() ([]byte, []int) {
	return file_globalRPC_proto_rawDescGZIP(), []int{8}
}

func (x *RespGetLatestAccountLp) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *RespGetLatestAccountLp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *RespGetLatestAccountLp) GetErr() string {
	if x != nil {
		return x.Err
	}
	return ""
}

func (x *RespGetLatestAccountLp) GetResult() *ResultGetLatestAccountLp {
	if x != nil {
		return x.Result
	}
	return nil
}

//
//Proto Name: getLatestAccountInfoByAccountIndex
//Description: get latest account assets list info from BalanceDelta
type ReqGetLatestAccountInfoByAccountIndex struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountIndex uint64 `protobuf:"varint,1,opt,name=AccountIndex,proto3" json:"AccountIndex,omitempty"`
}

func (x *ReqGetLatestAccountInfoByAccountIndex) Reset() {
	*x = ReqGetLatestAccountInfoByAccountIndex{}
	if protoimpl.UnsafeEnabled {
		mi := &file_globalRPC_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqGetLatestAccountInfoByAccountIndex) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqGetLatestAccountInfoByAccountIndex) ProtoMessage() {}

func (x *ReqGetLatestAccountInfoByAccountIndex) ProtoReflect() protoreflect.Message {
	mi := &file_globalRPC_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqGetLatestAccountInfoByAccountIndex.ProtoReflect.Descriptor instead.
func (*ReqGetLatestAccountInfoByAccountIndex) Descriptor() ([]byte, []int) {
	return file_globalRPC_proto_rawDescGZIP(), []int{9}
}

func (x *ReqGetLatestAccountInfoByAccountIndex) GetAccountIndex() uint64 {
	if x != nil {
		return x.AccountIndex
	}
	return 0
}

type AssetResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AssetId uint32 `protobuf:"varint,1,opt,name=AssetId,proto3" json:"AssetId,omitempty"`
	Balance string `protobuf:"bytes,2,opt,name=Balance,proto3" json:"Balance,omitempty"`
}

func (x *AssetResult) Reset() {
	*x = AssetResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_globalRPC_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssetResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssetResult) ProtoMessage() {}

func (x *AssetResult) ProtoReflect() protoreflect.Message {
	mi := &file_globalRPC_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssetResult.ProtoReflect.Descriptor instead.
func (*AssetResult) Descriptor() ([]byte, []int) {
	return file_globalRPC_proto_rawDescGZIP(), []int{10}
}

func (x *AssetResult) GetAssetId() uint32 {
	if x != nil {
		return x.AssetId
	}
	return 0
}

func (x *AssetResult) GetBalanceEnc() string {
	if x != nil {
		return x.Balance
	}
	return ""
}

type ResultGetLatestAccountInfoByAccountIndex struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountIndex      uint32 `protobuf:"varint,1,opt,name=AccountIndex,proto3" json:"AccountIndex,omitempty"`
	AccountName       string `protobuf:"bytes,2,opt,name=AccountName,proto3" json:"AccountName,omitempty"`
	AccountPk         string `protobuf:"bytes,3,opt,name=AccountPk,proto3" json:"AccountPk,omitempty"`
	Nonce             int64
	AssetResultAssets []*AssetResult `protobuf:"bytes,4,rep,name=AssetResultAssets,proto3" json:"AssetResultAssets,omitempty"`
}

func (x *ResultGetLatestAccountInfoByAccountIndex) Reset() {
	*x = ResultGetLatestAccountInfoByAccountIndex{}
	if protoimpl.UnsafeEnabled {
		mi := &file_globalRPC_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResultGetLatestAccountInfoByAccountIndex) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResultGetLatestAccountInfoByAccountIndex) ProtoMessage() {}

func (x *ResultGetLatestAccountInfoByAccountIndex) ProtoReflect() protoreflect.Message {
	mi := &file_globalRPC_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResultGetLatestAccountInfoByAccountIndex.ProtoReflect.Descriptor instead.
func (*ResultGetLatestAccountInfoByAccountIndex) Descriptor() ([]byte, []int) {
	return file_globalRPC_proto_rawDescGZIP(), []int{11}
}

func (x *ResultGetLatestAccountInfoByAccountIndex) GetAccountIndex() uint32 {
	if x != nil {
		return x.AccountIndex
	}
	return 0
}

func (x *ResultGetLatestAccountInfoByAccountIndex) GetAccountName() string {
	if x != nil {
		return x.AccountName
	}
	return ""
}

func (x *ResultGetLatestAccountInfoByAccountIndex) GetAccountPk() string {
	if x != nil {
		return x.AccountPk
	}
	return ""
}

func (x *ResultGetLatestAccountInfoByAccountIndex) GetAssetResultAssets() []*AssetResult {
	if x != nil {
		return x.AssetResultAssets
	}
	return nil
}

type RespGetLatestAccountInfoByAccountIndex struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status int64                                     `protobuf:"varint,1,opt,name=Status,proto3" json:"Status,omitempty"`
	Msg    string                                    `protobuf:"bytes,2,opt,name=Msg,proto3" json:"Msg,omitempty"`
	Err    string                                    `protobuf:"bytes,3,opt,name=Err,proto3" json:"Err,omitempty"`
	Result *ResultGetLatestAccountInfoByAccountIndex `protobuf:"bytes,4,opt,name=Result,proto3" json:"Result,omitempty"`
}

func (x *RespGetLatestAccountInfoByAccountIndex) Reset() {
	*x = RespGetLatestAccountInfoByAccountIndex{}
	if protoimpl.UnsafeEnabled {
		mi := &file_globalRPC_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespGetLatestAccountInfoByAccountIndex) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespGetLatestAccountInfoByAccountIndex) ProtoMessage() {}

func (x *RespGetLatestAccountInfoByAccountIndex) ProtoReflect() protoreflect.Message {
	mi := &file_globalRPC_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespGetLatestAccountInfoByAccountIndex.ProtoReflect.Descriptor instead.
func (*RespGetLatestAccountInfoByAccountIndex) Descriptor() ([]byte, []int) {
	return file_globalRPC_proto_rawDescGZIP(), []int{12}
}

func (x *RespGetLatestAccountInfoByAccountIndex) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *RespGetLatestAccountInfoByAccountIndex) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *RespGetLatestAccountInfoByAccountIndex) GetErr() string {
	if x != nil {
		return x.Err
	}
	return ""
}

func (x *RespGetLatestAccountInfoByAccountIndex) GetResult() *ResultGetLatestAccountInfoByAccountIndex {
	if x != nil {
		return x.Result
	}
	return nil
}

//
//Proto Name: getLatestAccountAssetInfo
//Description: get latest account assets list info from BalanceDelta
type ReqGetLatestAccountAssetInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountIndex uint64 `protobuf:"varint,1,opt,name=AccountIndex,proto3" json:"AccountIndex,omitempty"`
	AssetId      uint64 `protobuf:"varint,2,opt,name=AssetId,proto3" json:"AssetId,omitempty"`
}

func (x *ReqGetLatestAccountAssetInfo) Reset() {
	*x = ReqGetLatestAccountAssetInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_globalRPC_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqGetLatestAccountAssetInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqGetLatestAccountAssetInfo) ProtoMessage() {}

func (x *ReqGetLatestAccountAssetInfo) ProtoReflect() protoreflect.Message {
	mi := &file_globalRPC_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqGetLatestAccountAssetInfo.ProtoReflect.Descriptor instead.
func (*ReqGetLatestAccountAssetInfo) Descriptor() ([]byte, []int) {
	return file_globalRPC_proto_rawDescGZIP(), []int{13}
}

func (x *ReqGetLatestAccountAssetInfo) GetAccountIndex() uint64 {
	if x != nil {
		return x.AccountIndex
	}
	return 0
}

func (x *ReqGetLatestAccountAssetInfo) GetAssetId() uint64 {
	if x != nil {
		return x.AssetId
	}
	return 0
}

type ResultGetLatestAccountAssetInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountIndex      uint32 `protobuf:"varint,1,opt,name=AccountIndex,proto3" json:"AccountIndex,omitempty"`
	AccountName       string `protobuf:"bytes,2,opt,name=AccountName,proto3" json:"AccountName,omitempty"`
	AccountPk         string `protobuf:"bytes,3,opt,name=AccountPk,proto3" json:"AccountPk,omitempty"`
	Nonce             int64
	AssetResultAssets *AssetResult `protobuf:"bytes,4,opt,name=AssetResultAssets,proto3" json:"AssetResultAssets,omitempty"`
}

func (x *ResultGetLatestAccountAssetInfo) Reset() {
	*x = ResultGetLatestAccountAssetInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_globalRPC_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResultGetLatestAccountAssetInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResultGetLatestAccountAssetInfo) ProtoMessage() {}

func (x *ResultGetLatestAccountAssetInfo) ProtoReflect() protoreflect.Message {
	mi := &file_globalRPC_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResultGetLatestAccountAssetInfo.ProtoReflect.Descriptor instead.
func (*ResultGetLatestAccountAssetInfo) Descriptor() ([]byte, []int) {
	return file_globalRPC_proto_rawDescGZIP(), []int{14}
}

func (x *ResultGetLatestAccountAssetInfo) GetAccountIndex() uint32 {
	if x != nil {
		return x.AccountIndex
	}
	return 0
}

func (x *ResultGetLatestAccountAssetInfo) GetAccountName() string {
	if x != nil {
		return x.AccountName
	}
	return ""
}

func (x *ResultGetLatestAccountAssetInfo) GetAccountPk() string {
	if x != nil {
		return x.AccountPk
	}
	return ""
}

func (x *ResultGetLatestAccountAssetInfo) GetAssetResultAssets() *AssetResult {
	if x != nil {
		return x.AssetResultAssets
	}
	return nil
}

type RespGetLatestAccountAssetInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status int64                            `protobuf:"varint,1,opt,name=Status,proto3" json:"Status,omitempty"`
	Msg    string                           `protobuf:"bytes,2,opt,name=Msg,proto3" json:"Msg,omitempty"`
	Err    string                           `protobuf:"bytes,3,opt,name=Err,proto3" json:"Err,omitempty"`
	Result *ResultGetLatestAccountAssetInfo `protobuf:"bytes,4,opt,name=Result,proto3" json:"Result,omitempty"`
}

func (x *RespGetLatestAccountAssetInfo) Reset() {
	*x = RespGetLatestAccountAssetInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_globalRPC_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespGetLatestAccountAssetInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespGetLatestAccountAssetInfo) ProtoMessage() {}

func (x *RespGetLatestAccountAssetInfo) ProtoReflect() protoreflect.Message {
	mi := &file_globalRPC_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespGetLatestAccountAssetInfo.ProtoReflect.Descriptor instead.
func (*RespGetLatestAccountAssetInfo) Descriptor() ([]byte, []int) {
	return file_globalRPC_proto_rawDescGZIP(), []int{15}
}

func (x *RespGetLatestAccountAssetInfo) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *RespGetLatestAccountAssetInfo) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *RespGetLatestAccountAssetInfo) GetErr() string {
	if x != nil {
		return x.Err
	}
	return ""
}

func (x *RespGetLatestAccountAssetInfo) GetResult() *ResultGetLatestAccountAssetInfo {
	if x != nil {
		return x.Result
	}
	return nil
}

//
//Proto Name: getLatestPoolInfo
//Description: get latest pool assetA/B info from LiquidityDelta
type ReqGetLatestPoolInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PairIndex uint64 `protobuf:"varint,1,opt,name=PairIndex,proto3" json:"PairIndex,omitempty"`
}

func (x *ReqGetLatestPoolInfo) Reset() {
	*x = ReqGetLatestPoolInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_globalRPC_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqGetLatestPoolInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqGetLatestPoolInfo) ProtoMessage() {}

func (x *ReqGetLatestPoolInfo) ProtoReflect() protoreflect.Message {
	mi := &file_globalRPC_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqGetLatestPoolInfo.ProtoReflect.Descriptor instead.
func (*ReqGetLatestPoolInfo) Descriptor() ([]byte, []int) {
	return file_globalRPC_proto_rawDescGZIP(), []int{16}
}

func (x *ReqGetLatestPoolInfo) GetPairIndex() uint64 {
	if x != nil {
		return x.PairIndex
	}
	return 0
}

type ResultGetLatestPoolInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// primary key
	LiquidityId uint64 `protobuf:"varint,1,opt,name=LiquidityId,proto3" json:"LiquidityId,omitempty"`
	// account index
	AccountIndex uint32 `protobuf:"varint,2,opt,name=AccountIndex,proto3" json:"AccountIndex,omitempty"`
	// left asset id
	AssetAId uint32 `protobuf:"varint,3,opt,name=AssetAId,proto3" json:"AssetAId,omitempty"`
	// asset a name
	AssetAName string `protobuf:"bytes,4,opt,name=AssetAName,proto3" json:"AssetAName,omitempty"`
	// left asset Amount
	AssetAAmount uint64 `protobuf:"varint,5,opt,name=AssetA,proto3" json:"AssetA,omitempty"`
	// right asset id
	AssetBId uint32 `protobuf:"varint,6,opt,name=AssetBId,proto3" json:"AssetBId,omitempty"`
	// asset b name
	AssetBName string `protobuf:"bytes,7,opt,name=AssetBName,proto3" json:"AssetBName,omitempty"`
	// left asset Amount
	AssetBAmount uint64 `protobuf:"varint,8,opt,name=AssetB,proto3" json:"AssetB,omitempty"`
	// pair index
	PairIndex uint32 `protobuf:"varint,9,opt,name=PairIndex,proto3" json:"PairIndex,omitempty"`
	// LP token encryption
	LpEnc string `protobuf:"bytes,10,opt,name=LpEnc,proto3" json:"LpEnc,omitempty"`
}

func (x *ResultGetLatestPoolInfo) Reset() {
	*x = ResultGetLatestPoolInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_globalRPC_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResultGetLatestPoolInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResultGetLatestPoolInfo) ProtoMessage() {}

func (x *ResultGetLatestPoolInfo) ProtoReflect() protoreflect.Message {
	mi := &file_globalRPC_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResultGetLatestPoolInfo.ProtoReflect.Descriptor instead.
func (*ResultGetLatestPoolInfo) Descriptor() ([]byte, []int) {
	return file_globalRPC_proto_rawDescGZIP(), []int{17}
}

func (x *ResultGetLatestPoolInfo) GetLiquidityId() uint64 {
	if x != nil {
		return x.LiquidityId
	}
	return 0
}

func (x *ResultGetLatestPoolInfo) GetAccountIndex() uint32 {
	if x != nil {
		return x.AccountIndex
	}
	return 0
}

func (x *ResultGetLatestPoolInfo) GetAssetAId() uint32 {
	if x != nil {
		return x.AssetAId
	}
	return 0
}

func (x *ResultGetLatestPoolInfo) GetAssetAName() string {
	if x != nil {
		return x.AssetAName
	}
	return ""
}

func (x *ResultGetLatestPoolInfo) GetAssetAAmount() uint64 {
	if x != nil {
		return x.AssetAAmount
	}
	return 0
}

func (x *ResultGetLatestPoolInfo) GetAssetBId() uint32 {
	if x != nil {
		return x.AssetBId
	}
	return 0
}

func (x *ResultGetLatestPoolInfo) GetAssetBName() string {
	if x != nil {
		return x.AssetBName
	}
	return ""
}

func (x *ResultGetLatestPoolInfo) GetAssetBAmount() uint64 {
	if x != nil {
		return x.AssetBAmount
	}
	return 0
}

func (x *ResultGetLatestPoolInfo) GetPairIndex() uint32 {
	if x != nil {
		return x.PairIndex
	}
	return 0
}

func (x *ResultGetLatestPoolInfo) GetLpEnc() string {
	if x != nil {
		return x.LpEnc
	}
	return ""
}

type RespGetLatestPoolInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status int64                    `protobuf:"varint,1,opt,name=Status,proto3" json:"Status,omitempty"`
	Msg    string                   `protobuf:"bytes,2,opt,name=Msg,proto3" json:"Msg,omitempty"`
	Err    string                   `protobuf:"bytes,3,opt,name=Err,proto3" json:"Err,omitempty"`
	Result *ResultGetLatestPoolInfo `protobuf:"bytes,4,opt,name=Result,proto3" json:"Result,omitempty"`
}

func (x *RespGetLatestPoolInfo) Reset() {
	*x = RespGetLatestPoolInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_globalRPC_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespGetLatestPoolInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespGetLatestPoolInfo) ProtoMessage() {}

func (x *RespGetLatestPoolInfo) ProtoReflect() protoreflect.Message {
	mi := &file_globalRPC_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespGetLatestPoolInfo.ProtoReflect.Descriptor instead.
func (*RespGetLatestPoolInfo) Descriptor() ([]byte, []int) {
	return file_globalRPC_proto_rawDescGZIP(), []int{18}
}

func (x *RespGetLatestPoolInfo) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *RespGetLatestPoolInfo) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *RespGetLatestPoolInfo) GetErr() string {
	if x != nil {
		return x.Err
	}
	return ""
}

func (x *RespGetLatestPoolInfo) GetResult() *ResultGetLatestPoolInfo {
	if x != nil {
		return x.Result
	}
	return nil
}

type ReqGetLatestTxsListByAccountIndex struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountIndex uint64 `protobuf:"varint,1,opt,name=AccountIndex,proto3" json:"AccountIndex,omitempty"`
	Limit        uint64 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *ReqGetLatestTxsListByAccountIndex) Reset() {
	*x = ReqGetLatestTxsListByAccountIndex{}
	if protoimpl.UnsafeEnabled {
		mi := &file_globalRPC_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqGetLatestTxsListByAccountIndex) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqGetLatestTxsListByAccountIndex) ProtoMessage() {}

func (x *ReqGetLatestTxsListByAccountIndex) ProtoReflect() protoreflect.Message {
	mi := &file_globalRPC_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqGetLatestTxsListByAccountIndex.ProtoReflect.Descriptor instead.
func (*ReqGetLatestTxsListByAccountIndex) Descriptor() ([]byte, []int) {
	return file_globalRPC_proto_rawDescGZIP(), []int{19}
}

func (x *ReqGetLatestTxsListByAccountIndex) GetAccountIndex() uint64 {
	if x != nil {
		return x.AccountIndex
	}
	return 0
}

func (x *ReqGetLatestTxsListByAccountIndex) GetLimit() uint64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type TxDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AssetId           int64  `protobuf:"varint,1,opt,name=AssetId,proto3" json:"AssetId,omitempty"`
	AssetType         int64  `protobuf:"varint,2,opt,name=AssetType,proto3" json:"AssetType,omitempty"`
	AccountIndex      int64  `protobuf:"varint,3,opt,name=AccountIndex,proto3" json:"AccountIndex,omitempty"`
	AccountName       string `protobuf:"bytes,4,opt,name=AccountName,proto3" json:"AccountName,omitempty"`
	AccountBalanceEnc string `protobuf:"bytes,5,opt,name=AccountBalanceEnc,proto3" json:"AccountBalanceEnc,omitempty"`
	AccountDeltaEnc   string `protobuf:"bytes,6,opt,name=AccountDeltaEnc,proto3" json:"AccountDeltaEnc,omitempty"`
}

func (x *TxDetail) Reset() {
	*x = TxDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_globalRPC_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TxDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TxDetail) ProtoMessage() {}

func (x *TxDetail) ProtoReflect() protoreflect.Message {
	mi := &file_globalRPC_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TxDetail.ProtoReflect.Descriptor instead.
func (*TxDetail) Descriptor() ([]byte, []int) {
	return file_globalRPC_proto_rawDescGZIP(), []int{20}
}

func (x *TxDetail) GetAssetId() int64 {
	if x != nil {
		return x.AssetId
	}
	return 0
}

func (x *TxDetail) GetAssetType() int64 {
	if x != nil {
		return x.AssetType
	}
	return 0
}

func (x *TxDetail) GetAccountIndex() int64 {
	if x != nil {
		return x.AccountIndex
	}
	return 0
}

func (x *TxDetail) GetAccountName() string {
	if x != nil {
		return x.AccountName
	}
	return ""
}

func (x *TxDetail) GetAccountBalanceEnc() string {
	if x != nil {
		return x.AccountBalanceEnc
	}
	return ""
}

func (x *TxDetail) GetAccountDeltaEnc() string {
	if x != nil {
		return x.AccountDeltaEnc
	}
	return ""
}

type ResultGetLatestTxsListByAccountIndex struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TxHash        string      `protobuf:"bytes,1,opt,name=TxHash,proto3" json:"TxHash,omitempty"`
	TxType        int64       `protobuf:"varint,2,opt,name=TxType,proto3" json:"TxType,omitempty"`
	TxStatus      int64       `protobuf:"varint,3,opt,name=TxStatus,proto3" json:"TxStatus,omitempty"`
	TxAssetAId    int64       `protobuf:"varint,4,opt,name=TxAssetAId,proto3" json:"TxAssetAId,omitempty"`
	TxAssetBId    int64       `protobuf:"varint,5,opt,name=TxAssetBId,proto3" json:"TxAssetBId,omitempty"`
	TxDetails     []*TxDetail `protobuf:"bytes,6,rep,name=TxDetails,proto3" json:"TxDetails,omitempty"`
	TxAmount      string      `protobuf:"varint,7,opt,name=TxAmount,proto3" json:"TxAmount,omitempty"`
	NativeAddress string      `protobuf:"bytes,8,opt,name=NativeAddress,proto3" json:"NativeAddress,omitempty"`
	GasFeeAssetId int64       `protobuf:"varint,9,opt,name=GasFeeAssetId,proto3" json:"GasFeeAssetId,omitempty"`
	GasFee        string      `protobuf:"varint,10,opt,name=GasFee,proto3" json:"GasFee,omitempty"`
	BlockStatus   int64       `protobuf:"varint,11,opt,name=BlockStatus,proto3" json:"BlockStatus,omitempty"`
	BlockHeight   int64       `protobuf:"varint,12,opt,name=BlockHeight,proto3" json:"BlockHeight,omitempty"`
	BlockId       int64       `protobuf:"varint,13,opt,name=BlockId,proto3" json:"BlockId,omitempty"`
	Memo          string      `protobuf:"bytes,15,opt,name=Memo,proto3" json:"Memo,omitempty"`
	CreateAt      int64       `protobuf:"varint,16,opt,name=CreateAt,proto3" json:"CreateAt,omitempty"`
}

func (x *ResultGetLatestTxsListByAccountIndex) Reset() {
	*x = ResultGetLatestTxsListByAccountIndex{}
	if protoimpl.UnsafeEnabled {
		mi := &file_globalRPC_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResultGetLatestTxsListByAccountIndex) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResultGetLatestTxsListByAccountIndex) ProtoMessage() {}

func (x *ResultGetLatestTxsListByAccountIndex) ProtoReflect() protoreflect.Message {
	mi := &file_globalRPC_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResultGetLatestTxsListByAccountIndex.ProtoReflect.Descriptor instead.
func (*ResultGetLatestTxsListByAccountIndex) Descriptor() ([]byte, []int) {
	return file_globalRPC_proto_rawDescGZIP(), []int{21}
}

func (x *ResultGetLatestTxsListByAccountIndex) GetTxHash() string {
	if x != nil {
		return x.TxHash
	}
	return ""
}

func (x *ResultGetLatestTxsListByAccountIndex) GetTxType() int64 {
	if x != nil {
		return x.TxType
	}
	return 0
}

func (x *ResultGetLatestTxsListByAccountIndex) GetTxStatus() int64 {
	if x != nil {
		return x.TxStatus
	}
	return 0
}

func (x *ResultGetLatestTxsListByAccountIndex) GetTxAssetAId() int64 {
	if x != nil {
		return x.TxAssetAId
	}
	return 0
}

func (x *ResultGetLatestTxsListByAccountIndex) GetTxAssetBId() int64 {
	if x != nil {
		return x.TxAssetBId
	}
	return 0
}

func (x *ResultGetLatestTxsListByAccountIndex) GetTxDetails() []*TxDetail {
	if x != nil {
		return x.TxDetails
	}
	return nil
}

func (x *ResultGetLatestTxsListByAccountIndex) GetTxAmount() string {
	if x != nil {
		return x.TxAmount
	}
	return ""
}

func (x *ResultGetLatestTxsListByAccountIndex) GetNativeAddress() string {
	if x != nil {
		return x.NativeAddress
	}
	return ""
}

func (x *ResultGetLatestTxsListByAccountIndex) GetGasFeeAssetId() int64 {
	if x != nil {
		return x.GasFeeAssetId
	}
	return 0
}

func (x *ResultGetLatestTxsListByAccountIndex) GetGasFee() string {
	if x != nil {
		return x.GasFee
	}
	return ""
}

func (x *ResultGetLatestTxsListByAccountIndex) GetBlockStatus() int64 {
	if x != nil {
		return x.BlockStatus
	}
	return 0
}

func (x *ResultGetLatestTxsListByAccountIndex) GetBlockHeight() int64 {
	if x != nil {
		return x.BlockHeight
	}
	return 0
}

func (x *ResultGetLatestTxsListByAccountIndex) GetBlockId() int64 {
	if x != nil {
		return x.BlockId
	}
	return 0
}

func (x *ResultGetLatestTxsListByAccountIndex) GetMemo() string {
	if x != nil {
		return x.Memo
	}
	return ""
}

func (x *ResultGetLatestTxsListByAccountIndex) GetCreateAt() int64 {
	if x != nil {
		return x.CreateAt
	}
	return 0
}

type RespGetLatestTxsListByAccountIndex struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status int64                                   `protobuf:"varint,1,opt,name=Status,proto3" json:"Status,omitempty"`
	Msg    string                                  `protobuf:"bytes,2,opt,name=Msg,proto3" json:"Msg,omitempty"`
	Err    string                                  `protobuf:"bytes,3,opt,name=Err,proto3" json:"Err,omitempty"`
	Result []*ResultGetLatestTxsListByAccountIndex `protobuf:"bytes,4,rep,name=Result,proto3" json:"Result,omitempty"`
}

func (x *RespGetLatestTxsListByAccountIndex) Reset() {
	*x = RespGetLatestTxsListByAccountIndex{}
	if protoimpl.UnsafeEnabled {
		mi := &file_globalRPC_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespGetLatestTxsListByAccountIndex) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespGetLatestTxsListByAccountIndex) ProtoMessage() {}

func (x *RespGetLatestTxsListByAccountIndex) ProtoReflect() protoreflect.Message {
	mi := &file_globalRPC_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespGetLatestTxsListByAccountIndex.ProtoReflect.Descriptor instead.
func (*RespGetLatestTxsListByAccountIndex) Descriptor() ([]byte, []int) {
	return file_globalRPC_proto_rawDescGZIP(), []int{22}
}

func (x *RespGetLatestTxsListByAccountIndex) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *RespGetLatestTxsListByAccountIndex) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *RespGetLatestTxsListByAccountIndex) GetErr() string {
	if x != nil {
		return x.Err
	}
	return ""
}

func (x *RespGetLatestTxsListByAccountIndex) GetResult() []*ResultGetLatestTxsListByAccountIndex {
	if x != nil {
		return x.Result
	}
	return nil
}

type ReqGetLatestTxsListByAccountIndexAndTxType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountIndex uint64 `protobuf:"varint,1,opt,name=AccountIndex,proto3" json:"AccountIndex,omitempty"`
	TxType       uint64 `protobuf:"varint,2,opt,name=TxType,proto3" json:"TxType,omitempty"`
	Limit        uint64 `protobuf:"varint,3,opt,name=Limit,proto3" json:"Limit,omitempty"`
	Offset       uint64 `protobuf:"varint,4,opt,name=Offset,proto3" json:"Offset,omitempty"`
}

func (x *ReqGetLatestTxsListByAccountIndexAndTxType) Reset() {
	*x = ReqGetLatestTxsListByAccountIndexAndTxType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_globalRPC_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqGetLatestTxsListByAccountIndexAndTxType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqGetLatestTxsListByAccountIndexAndTxType) ProtoMessage() {}

func (x *ReqGetLatestTxsListByAccountIndexAndTxType) ProtoReflect() protoreflect.Message {
	mi := &file_globalRPC_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqGetLatestTxsListByAccountIndexAndTxType.ProtoReflect.Descriptor instead.
func (*ReqGetLatestTxsListByAccountIndexAndTxType) Descriptor() ([]byte, []int) {
	return file_globalRPC_proto_rawDescGZIP(), []int{23}
}

func (x *ReqGetLatestTxsListByAccountIndexAndTxType) GetAccountIndex() uint64 {
	if x != nil {
		return x.AccountIndex
	}
	return 0
}

func (x *ReqGetLatestTxsListByAccountIndexAndTxType) GetTxType() uint64 {
	if x != nil {
		return x.TxType
	}
	return 0
}

func (x *ReqGetLatestTxsListByAccountIndexAndTxType) GetLimit() uint64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ReqGetLatestTxsListByAccountIndexAndTxType) GetOffset() uint64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type TransactionInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TxHash        string      `protobuf:"bytes,1,opt,name=TxHash,proto3" json:"TxHash,omitempty"`
	TxType        int64       `protobuf:"varint,2,opt,name=TxType,proto3" json:"TxType,omitempty"`
	TxStatus      int64       `protobuf:"varint,3,opt,name=TxStatus,proto3" json:"TxStatus,omitempty"`
	TxAssetAId    int64       `protobuf:"varint,4,opt,name=TxAssetAId,proto3" json:"TxAssetAId,omitempty"`
	TxAssetBId    int64       `protobuf:"varint,5,opt,name=TxAssetBId,proto3" json:"TxAssetBId,omitempty"`
	TxDetails     []*TxDetail `protobuf:"bytes,6,rep,name=TxDetails,proto3" json:"TxDetails,omitempty"`
	TxAmount      int64       `protobuf:"varint,7,opt,name=TxAmount,proto3" json:"TxAmount,omitempty"`
	NativeAddress string      `protobuf:"bytes,8,opt,name=NativeAddress,proto3" json:"NativeAddress,omitempty"`
	GasFeeAssetId int64       `protobuf:"varint,9,opt,name=GasFeeAssetId,proto3" json:"GasFeeAssetId,omitempty"`
	GasFee        int64       `protobuf:"varint,10,opt,name=GasFee,proto3" json:"GasFee,omitempty"`
	BlockStatus   int64       `protobuf:"varint,11,opt,name=BlockStatus,proto3" json:"BlockStatus,omitempty"`
	BlockHeight   int64       `protobuf:"varint,12,opt,name=BlockHeight,proto3" json:"BlockHeight,omitempty"`
	BlockId       int64       `protobuf:"varint,13,opt,name=BlockId,proto3" json:"BlockId,omitempty"`
	ChainId       int64       `protobuf:"varint,14,opt,name=ChainId,proto3" json:"ChainId,omitempty"`
	Memo          string      `protobuf:"bytes,15,opt,name=Memo,proto3" json:"Memo,omitempty"`
	CreateAt      int64       `protobuf:"varint,16,opt,name=CreateAt,proto3" json:"CreateAt,omitempty"`
}

func (x *TransactionInfo) Reset() {
	*x = TransactionInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_globalRPC_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransactionInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionInfo) ProtoMessage() {}

func (x *TransactionInfo) ProtoReflect() protoreflect.Message {
	mi := &file_globalRPC_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionInfo.ProtoReflect.Descriptor instead.
func (*TransactionInfo) Descriptor() ([]byte, []int) {
	return file_globalRPC_proto_rawDescGZIP(), []int{24}
}

func (x *TransactionInfo) GetTxHash() string {
	if x != nil {
		return x.TxHash
	}
	return ""
}

func (x *TransactionInfo) GetTxType() int64 {
	if x != nil {
		return x.TxType
	}
	return 0
}

func (x *TransactionInfo) GetTxStatus() int64 {
	if x != nil {
		return x.TxStatus
	}
	return 0
}

func (x *TransactionInfo) GetTxAssetAId() int64 {
	if x != nil {
		return x.TxAssetAId
	}
	return 0
}

func (x *TransactionInfo) GetTxAssetBId() int64 {
	if x != nil {
		return x.TxAssetBId
	}
	return 0
}

func (x *TransactionInfo) GetTxDetails() []*TxDetail {
	if x != nil {
		return x.TxDetails
	}
	return nil
}

func (x *TransactionInfo) GetTxAmount() int64 {
	if x != nil {
		return x.TxAmount
	}
	return 0
}

func (x *TransactionInfo) GetNativeAddress() string {
	if x != nil {
		return x.NativeAddress
	}
	return ""
}

func (x *TransactionInfo) GetGasFeeAssetId() int64 {
	if x != nil {
		return x.GasFeeAssetId
	}
	return 0
}

func (x *TransactionInfo) GetGasFee() int64 {
	if x != nil {
		return x.GasFee
	}
	return 0
}

func (x *TransactionInfo) GetBlockStatus() int64 {
	if x != nil {
		return x.BlockStatus
	}
	return 0
}

func (x *TransactionInfo) GetBlockHeight() int64 {
	if x != nil {
		return x.BlockHeight
	}
	return 0
}

func (x *TransactionInfo) GetBlockId() int64 {
	if x != nil {
		return x.BlockId
	}
	return 0
}

func (x *TransactionInfo) GetChainId() int64 {
	if x != nil {
		return x.ChainId
	}
	return 0
}

func (x *TransactionInfo) GetMemo() string {
	if x != nil {
		return x.Memo
	}
	return ""
}

func (x *TransactionInfo) GetCreateAt() int64 {
	if x != nil {
		return x.CreateAt
	}
	return 0
}

type ResultGetLatestTxsListByAccountIndexAndTxType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Limit   uint64             `protobuf:"varint,1,opt,name=Limit,proto3" json:"Limit,omitempty"`
	Offset  uint64             `protobuf:"varint,2,opt,name=Offset,proto3" json:"Offset,omitempty"`
	Total   uint64             `protobuf:"varint,3,opt,name=Total,proto3" json:"Total,omitempty"`
	TxsList []*TransactionInfo `protobuf:"bytes,4,rep,name=TxsList,proto3" json:"TxsList,omitempty"`
}

func (x *ResultGetLatestTxsListByAccountIndexAndTxType) Reset() {
	*x = ResultGetLatestTxsListByAccountIndexAndTxType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_globalRPC_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResultGetLatestTxsListByAccountIndexAndTxType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResultGetLatestTxsListByAccountIndexAndTxType) ProtoMessage() {}

func (x *ResultGetLatestTxsListByAccountIndexAndTxType) ProtoReflect() protoreflect.Message {
	mi := &file_globalRPC_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResultGetLatestTxsListByAccountIndexAndTxType.ProtoReflect.Descriptor instead.
func (*ResultGetLatestTxsListByAccountIndexAndTxType) Descriptor() ([]byte, []int) {
	return file_globalRPC_proto_rawDescGZIP(), []int{25}
}

func (x *ResultGetLatestTxsListByAccountIndexAndTxType) GetLimit() uint64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ResultGetLatestTxsListByAccountIndexAndTxType) GetOffset() uint64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *ResultGetLatestTxsListByAccountIndexAndTxType) GetTotal() uint64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ResultGetLatestTxsListByAccountIndexAndTxType) GetTxsList() []*TransactionInfo {
	if x != nil {
		return x.TxsList
	}
	return nil
}

type RespGetLatestTxsListByAccountIndexAndTxType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status int64                                          `protobuf:"varint,1,opt,name=Status,proto3" json:"Status,omitempty"`
	Msg    string                                         `protobuf:"bytes,2,opt,name=Msg,proto3" json:"Msg,omitempty"`
	Err    string                                         `protobuf:"bytes,3,opt,name=Err,proto3" json:"Err,omitempty"`
	Result *ResultGetLatestTxsListByAccountIndexAndTxType `protobuf:"bytes,4,opt,name=Result,proto3" json:"Result,omitempty"`
}

func (x *RespGetLatestTxsListByAccountIndexAndTxType) Reset() {
	*x = RespGetLatestTxsListByAccountIndexAndTxType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_globalRPC_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespGetLatestTxsListByAccountIndexAndTxType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespGetLatestTxsListByAccountIndexAndTxType) ProtoMessage() {}

func (x *RespGetLatestTxsListByAccountIndexAndTxType) ProtoReflect() protoreflect.Message {
	mi := &file_globalRPC_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespGetLatestTxsListByAccountIndexAndTxType.ProtoReflect.Descriptor instead.
func (*RespGetLatestTxsListByAccountIndexAndTxType) Descriptor() ([]byte, []int) {
	return file_globalRPC_proto_rawDescGZIP(), []int{26}
}

func (x *RespGetLatestTxsListByAccountIndexAndTxType) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *RespGetLatestTxsListByAccountIndexAndTxType) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *RespGetLatestTxsListByAccountIndexAndTxType) GetErr() string {
	if x != nil {
		return x.Err
	}
	return ""
}

func (x *RespGetLatestTxsListByAccountIndexAndTxType) GetResult() *ResultGetLatestTxsListByAccountIndexAndTxType {
	if x != nil {
		return x.Result
	}
	return nil
}

// SendTx
type ReqSendTx struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TxType uint64 `protobuf:"varint,1,opt,name=TxType,proto3" json:"TxType,omitempty"`
	TxInfo string `protobuf:"bytes,2,opt,name=TxInfo,proto3" json:"TxInfo,omitempty"`
}

func (x *ReqSendTx) Reset() {
	*x = ReqSendTx{}
	if protoimpl.UnsafeEnabled {
		mi := &file_globalRPC_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqSendTx) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqSendTx) ProtoMessage() {}

func (x *ReqSendTx) ProtoReflect() protoreflect.Message {
	mi := &file_globalRPC_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqSendTx.ProtoReflect.Descriptor instead.
func (*ReqSendTx) Descriptor() ([]byte, []int) {
	return file_globalRPC_proto_rawDescGZIP(), []int{27}
}

func (x *ReqSendTx) GetTxType() uint64 {
	if x != nil {
		return x.TxType
	}
	return 0
}

func (x *ReqSendTx) GetTxInfo() string {
	if x != nil {
		return x.TxInfo
	}
	return ""
}

type ResultSendTx struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TxId string `protobuf:"bytes,1,opt,name=TxId,proto3" json:"TxId,omitempty"`
}

func (x *ResultSendTx) Reset() {
	*x = ResultSendTx{}
	if protoimpl.UnsafeEnabled {
		mi := &file_globalRPC_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResultSendTx) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResultSendTx) ProtoMessage() {}

func (x *ResultSendTx) ProtoReflect() protoreflect.Message {
	mi := &file_globalRPC_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResultSendTx.ProtoReflect.Descriptor instead.
func (*ResultSendTx) Descriptor() ([]byte, []int) {
	return file_globalRPC_proto_rawDescGZIP(), []int{28}
}

func (x *ResultSendTx) GetTxId() string {
	if x != nil {
		return x.TxId
	}
	return ""
}

type RespSendTx struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status int64         `protobuf:"varint,1,opt,name=Status,proto3" json:"Status,omitempty"`
	Msg    string        `protobuf:"bytes,2,opt,name=Msg,proto3" json:"Msg,omitempty"`
	Err    string        `protobuf:"bytes,3,opt,name=Err,proto3" json:"Err,omitempty"`
	Result *ResultSendTx `protobuf:"bytes,4,opt,name=Result,proto3" json:"Result,omitempty"`
}

func (x *RespSendTx) Reset() {
	*x = RespSendTx{}
	if protoimpl.UnsafeEnabled {
		mi := &file_globalRPC_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespSendTx) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespSendTx) ProtoMessage() {}

func (x *RespSendTx) ProtoReflect() protoreflect.Message {
	mi := &file_globalRPC_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespSendTx.ProtoReflect.Descriptor instead.
func (*RespSendTx) Descriptor() ([]byte, []int) {
	return file_globalRPC_proto_rawDescGZIP(), []int{29}
}

func (x *RespSendTx) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *RespSendTx) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *RespSendTx) GetErr() string {
	if x != nil {
		return x.Err
	}
	return ""
}

func (x *RespSendTx) GetResult() *ResultSendTx {
	if x != nil {
		return x.Result
	}
	return nil
}

// GetSwapAmount
type ReqGetSwapAmount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PairIndex   uint32 `protobuf:"varint,1,opt,name=PairIndex,proto3" json:"PairIndex,omitempty"`
	AssetId     uint32 `protobuf:"varint,2,opt,name=AssetId,proto3" json:"AssetId,omitempty"`
	AssetAmount uint64 `protobuf:"varint,3,opt,name=AssetAmount,proto3" json:"AssetAmount,omitempty"`
	IsFrom      bool   `protobuf:"varint,4,opt,name=IsFrom,proto3" json:"IsFrom,omitempty"`
}

func (x *ReqGetSwapAmount) Reset() {
	*x = ReqGetSwapAmount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_globalRPC_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqGetSwapAmount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqGetSwapAmount) ProtoMessage() {}

func (x *ReqGetSwapAmount) ProtoReflect() protoreflect.Message {
	mi := &file_globalRPC_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqGetSwapAmount.ProtoReflect.Descriptor instead.
func (*ReqGetSwapAmount) Descriptor() ([]byte, []int) {
	return file_globalRPC_proto_rawDescGZIP(), []int{30}
}

func (x *ReqGetSwapAmount) GetPairIndex() uint32 {
	if x != nil {
		return x.PairIndex
	}
	return 0
}

func (x *ReqGetSwapAmount) GetAssetId() uint32 {
	if x != nil {
		return x.AssetId
	}
	return 0
}

func (x *ReqGetSwapAmount) GetAssetAmount() uint64 {
	if x != nil {
		return x.AssetAmount
	}
	return 0
}

func (x *ReqGetSwapAmount) GetIsFrom() bool {
	if x != nil {
		return x.IsFrom
	}
	return false
}

type ResultGetSwapAmount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PairIndex      uint32 `protobuf:"varint,1,opt,name=PairIndex,proto3" json:"PairIndex,omitempty"`
	ResAssetAmount uint64 `protobuf:"varint,2,opt,name=ResAssetAmount,proto3" json:"ResAssetAmount,omitempty"`
	ResAssetId     uint32 `protobuf:"varint,3,opt,name=ResAssetId,proto3" json:"ResAssetId,omitempty"`
}

func (x *ResultGetSwapAmount) Reset() {
	*x = ResultGetSwapAmount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_globalRPC_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResultGetSwapAmount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResultGetSwapAmount) ProtoMessage() {}

func (x *ResultGetSwapAmount) ProtoReflect() protoreflect.Message {
	mi := &file_globalRPC_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResultGetSwapAmount.ProtoReflect.Descriptor instead.
func (*ResultGetSwapAmount) Descriptor() ([]byte, []int) {
	return file_globalRPC_proto_rawDescGZIP(), []int{31}
}

func (x *ResultGetSwapAmount) GetPairIndex() uint32 {
	if x != nil {
		return x.PairIndex
	}
	return 0
}

func (x *ResultGetSwapAmount) GetResAssetAmount() uint64 {
	if x != nil {
		return x.ResAssetAmount
	}
	return 0
}

func (x *ResultGetSwapAmount) GetResAssetId() uint32 {
	if x != nil {
		return x.ResAssetId
	}
	return 0
}

type RespGetSwapAmount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status int64                `protobuf:"varint,1,opt,name=Status,proto3" json:"Status,omitempty"`
	Msg    string               `protobuf:"bytes,2,opt,name=Msg,proto3" json:"Msg,omitempty"`
	Err    string               `protobuf:"bytes,3,opt,name=Err,proto3" json:"Err,omitempty"`
	Result *ResultGetSwapAmount `protobuf:"bytes,4,opt,name=Result,proto3" json:"Result,omitempty"`
}

func (x *RespGetSwapAmount) Reset() {
	*x = RespGetSwapAmount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_globalRPC_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespGetSwapAmount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespGetSwapAmount) ProtoMessage() {}

func (x *RespGetSwapAmount) ProtoReflect() protoreflect.Message {
	mi := &file_globalRPC_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespGetSwapAmount.ProtoReflect.Descriptor instead.
func (*RespGetSwapAmount) Descriptor() ([]byte, []int) {
	return file_globalRPC_proto_rawDescGZIP(), []int{32}
}

func (x *RespGetSwapAmount) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *RespGetSwapAmount) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *RespGetSwapAmount) GetErr() string {
	if x != nil {
		return x.Err
	}
	return ""
}

func (x *RespGetSwapAmount) GetResult() *ResultGetSwapAmount {
	if x != nil {
		return x.Result
	}
	return nil
}

// GetLpValue
type ReqGetLpValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PairIndex uint32 `protobuf:"varint,1,opt,name=PairIndex,proto3" json:"PairIndex,omitempty"`
	LPAmount  uint64 `protobuf:"varint,2,opt,name=LPAmount,proto3" json:"LPAmount,omitempty"`
}

func (x *ReqGetLpValue) Reset() {
	*x = ReqGetLpValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_globalRPC_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqGetLpValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqGetLpValue) ProtoMessage() {}

func (x *ReqGetLpValue) ProtoReflect() protoreflect.Message {
	mi := &file_globalRPC_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqGetLpValue.ProtoReflect.Descriptor instead.
func (*ReqGetLpValue) Descriptor() ([]byte, []int) {
	return file_globalRPC_proto_rawDescGZIP(), []int{33}
}

func (x *ReqGetLpValue) GetPairIndex() uint32 {
	if x != nil {
		return x.PairIndex
	}
	return 0
}

func (x *ReqGetLpValue) GetLPAmount() uint64 {
	if x != nil {
		return x.LPAmount
	}
	return 0
}

type ResultGetLpValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AssetAId     uint32 `protobuf:"varint,1,opt,name=AssetAId,proto3" json:"AssetAId,omitempty"`
	AssetAName   string `protobuf:"bytes,2,opt,name=AssetAName,proto3" json:"AssetAName,omitempty"`
	AssetAAmount uint64 `protobuf:"varint,3,opt,name=AssetA,proto3" json:"AssetA,omitempty"`
	AssetBId     uint32 `protobuf:"varint,4,opt,name=AssetBId,proto3" json:"AssetBId,omitempty"`
	AssetBName   string `protobuf:"bytes,5,opt,name=AssetBName,proto3" json:"AssetBName,omitempty"`
	AssetBAmount uint64 `protobuf:"varint,6,opt,name=AssetB,proto3" json:"AssetB,omitempty"`
}

func (x *ResultGetLpValue) Reset() {
	*x = ResultGetLpValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_globalRPC_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResultGetLpValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResultGetLpValue) ProtoMessage() {}

func (x *ResultGetLpValue) ProtoReflect() protoreflect.Message {
	mi := &file_globalRPC_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResultGetLpValue.ProtoReflect.Descriptor instead.
func (*ResultGetLpValue) Descriptor() ([]byte, []int) {
	return file_globalRPC_proto_rawDescGZIP(), []int{34}
}

func (x *ResultGetLpValue) GetAssetAId() uint32 {
	if x != nil {
		return x.AssetAId
	}
	return 0
}

func (x *ResultGetLpValue) GetAssetAName() string {
	if x != nil {
		return x.AssetAName
	}
	return ""
}

func (x *ResultGetLpValue) GetAssetAAmount() uint64 {
	if x != nil {
		return x.AssetAAmount
	}
	return 0
}

func (x *ResultGetLpValue) GetAssetBId() uint32 {
	if x != nil {
		return x.AssetBId
	}
	return 0
}

func (x *ResultGetLpValue) GetAssetBName() string {
	if x != nil {
		return x.AssetBName
	}
	return ""
}

func (x *ResultGetLpValue) GetAssetBAmount() uint64 {
	if x != nil {
		return x.AssetBAmount
	}
	return 0
}

type RespGetLpValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status int64             `protobuf:"varint,1,opt,name=Status,proto3" json:"Status,omitempty"`
	Msg    string            `protobuf:"bytes,2,opt,name=Msg,proto3" json:"Msg,omitempty"`
	Err    string            `protobuf:"bytes,3,opt,name=Err,proto3" json:"Err,omitempty"`
	Result *ResultGetLpValue `protobuf:"bytes,4,opt,name=Result,proto3" json:"Result,omitempty"`
}

func (x *RespGetLpValue) Reset() {
	*x = RespGetLpValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_globalRPC_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespGetLpValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespGetLpValue) ProtoMessage() {}

func (x *RespGetLpValue) ProtoReflect() protoreflect.Message {
	mi := &file_globalRPC_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespGetLpValue.ProtoReflect.Descriptor instead.
func (*RespGetLpValue) Descriptor() ([]byte, []int) {
	return file_globalRPC_proto_rawDescGZIP(), []int{35}
}

func (x *RespGetLpValue) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *RespGetLpValue) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *RespGetLpValue) GetErr() string {
	if x != nil {
		return x.Err
	}
	return ""
}

func (x *RespGetLpValue) GetResult() *ResultGetLpValue {
	if x != nil {
		return x.Result
	}
	return nil
}

// GetPairRatio
type ReqGetPairRatio struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PairIndex uint32 `protobuf:"varint,1,opt,name=PairIndex,proto3" json:"PairIndex,omitempty"`
}

func (x *ReqGetPairRatio) Reset() {
	*x = ReqGetPairRatio{}
	if protoimpl.UnsafeEnabled {
		mi := &file_globalRPC_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqGetPairRatio) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqGetPairRatio) ProtoMessage() {}

func (x *ReqGetPairRatio) ProtoReflect() protoreflect.Message {
	mi := &file_globalRPC_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqGetPairRatio.ProtoReflect.Descriptor instead.
func (*ReqGetPairRatio) Descriptor() ([]byte, []int) {
	return file_globalRPC_proto_rawDescGZIP(), []int{36}
}

func (x *ReqGetPairRatio) GetPairIndex() uint32 {
	if x != nil {
		return x.PairIndex
	}
	return 0
}

type ResultGetPairRatio struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PairRatio     float32 `protobuf:"fixed32,1,opt,name=PairRatio,proto3" json:"PairRatio,omitempty"`
	AssetAId      uint32  `protobuf:"varint,2,opt,name=AssetAId,proto3" json:"AssetAId,omitempty"`
	AssetAAmount  uint64  `protobuf:"varint,3,opt,name=AssetA,proto3" json:"AssetA,omitempty"`
	AssetBId      uint32  `protobuf:"varint,4,opt,name=AssetBId,proto3" json:"AssetBId,omitempty"`
	AssetBAmount  uint64  `protobuf:"varint,5,opt,name=AssetB,proto3" json:"AssetB,omitempty"`
	TotalLpAmount uint64  `protobuf:"varint,6,opt,name=TotalLpAmount,proto3" json:"TotalLpAmount,omitempty"`
}

func (x *ResultGetPairRatio) Reset() {
	*x = ResultGetPairRatio{}
	if protoimpl.UnsafeEnabled {
		mi := &file_globalRPC_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResultGetPairRatio) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResultGetPairRatio) ProtoMessage() {}

func (x *ResultGetPairRatio) ProtoReflect() protoreflect.Message {
	mi := &file_globalRPC_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResultGetPairRatio.ProtoReflect.Descriptor instead.
func (*ResultGetPairRatio) Descriptor() ([]byte, []int) {
	return file_globalRPC_proto_rawDescGZIP(), []int{37}
}

func (x *ResultGetPairRatio) GetPairRatio() float32 {
	if x != nil {
		return x.PairRatio
	}
	return 0
}

func (x *ResultGetPairRatio) GetAssetAId() uint32 {
	if x != nil {
		return x.AssetAId
	}
	return 0
}

func (x *ResultGetPairRatio) GetAssetAAmount() uint64 {
	if x != nil {
		return x.AssetAAmount
	}
	return 0
}

func (x *ResultGetPairRatio) GetAssetBId() uint32 {
	if x != nil {
		return x.AssetBId
	}
	return 0
}

func (x *ResultGetPairRatio) GetAssetBAmount() uint64 {
	if x != nil {
		return x.AssetBAmount
	}
	return 0
}

func (x *ResultGetPairRatio) GetTotalLpAmount() uint64 {
	if x != nil {
		return x.TotalLpAmount
	}
	return 0
}

type RespGetPairRatio struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status int64               `protobuf:"varint,1,opt,name=Status,proto3" json:"Status,omitempty"`
	Msg    string              `protobuf:"bytes,2,opt,name=Msg,proto3" json:"Msg,omitempty"`
	Err    string              `protobuf:"bytes,3,opt,name=Err,proto3" json:"Err,omitempty"`
	Result *ResultGetPairRatio `protobuf:"bytes,4,opt,name=Result,proto3" json:"Result,omitempty"`
}

func (x *RespGetPairRatio) Reset() {
	*x = RespGetPairRatio{}
	if protoimpl.UnsafeEnabled {
		mi := &file_globalRPC_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespGetPairRatio) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespGetPairRatio) ProtoMessage() {}

func (x *RespGetPairRatio) ProtoReflect() protoreflect.Message {
	mi := &file_globalRPC_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespGetPairRatio.ProtoReflect.Descriptor instead.
func (*RespGetPairRatio) Descriptor() ([]byte, []int) {
	return file_globalRPC_proto_rawDescGZIP(), []int{38}
}

func (x *RespGetPairRatio) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *RespGetPairRatio) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *RespGetPairRatio) GetErr() string {
	if x != nil {
		return x.Err
	}
	return ""
}

func (x *RespGetPairRatio) GetResult() *ResultGetPairRatio {
	if x != nil {
		return x.Result
	}
	return nil
}

type ReqResetGlobalMap struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ReqResetGlobalMap) Reset() {
	*x = ReqResetGlobalMap{}
	if protoimpl.UnsafeEnabled {
		mi := &file_globalRPC_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqResetGlobalMap) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqResetGlobalMap) ProtoMessage() {}

func (x *ReqResetGlobalMap) ProtoReflect() protoreflect.Message {
	mi := &file_globalRPC_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqResetGlobalMap.ProtoReflect.Descriptor instead.
func (*ReqResetGlobalMap) Descriptor() ([]byte, []int) {
	return file_globalRPC_proto_rawDescGZIP(), []int{39}
}

type RespResetGlobalMap struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status int64  `protobuf:"varint,1,opt,name=Status,proto3" json:"Status,omitempty"`
	Msg    string `protobuf:"bytes,2,opt,name=Msg,proto3" json:"Msg,omitempty"`
	Err    string `protobuf:"bytes,3,opt,name=Err,proto3" json:"Err,omitempty"`
}

func (x *RespResetGlobalMap) Reset() {
	*x = RespResetGlobalMap{}
	if protoimpl.UnsafeEnabled {
		mi := &file_globalRPC_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespResetGlobalMap) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespResetGlobalMap) ProtoMessage() {}

func (x *RespResetGlobalMap) ProtoReflect() protoreflect.Message {
	mi := &file_globalRPC_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespResetGlobalMap.ProtoReflect.Descriptor instead.
func (*RespResetGlobalMap) Descriptor() ([]byte, []int) {
	return file_globalRPC_proto_rawDescGZIP(), []int{40}
}

func (x *RespResetGlobalMap) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *RespResetGlobalMap) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *RespResetGlobalMap) GetErr() string {
	if x != nil {
		return x.Err
	}
	return ""
}

// getLatestL1AmountList
type ReqGetLatestL1AmountList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ReqGetLatestL1AmountList) Reset() {
	*x = ReqGetLatestL1AmountList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_globalRPC_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqGetLatestL1AmountList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqGetLatestL1AmountList) ProtoMessage() {}

func (x *ReqGetLatestL1AmountList) ProtoReflect() protoreflect.Message {
	mi := &file_globalRPC_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqGetLatestL1AmountList.ProtoReflect.Descriptor instead.
func (*ReqGetLatestL1AmountList) Descriptor() ([]byte, []int) {
	return file_globalRPC_proto_rawDescGZIP(), []int{41}
}

type ResultGetLatestL1AmountList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChainId     int64 `protobuf:"varint,1,opt,name=ChainId,proto3" json:"ChainId,omitempty"`
	AssetId     int64 `protobuf:"varint,2,opt,name=AssetId,proto3" json:"AssetId,omitempty"`
	TotalAmount int64 `protobuf:"varint,3,opt,name=TotalAmount,proto3" json:"TotalAmount,omitempty"`
}

func (x *ResultGetLatestL1AmountList) Reset() {
	*x = ResultGetLatestL1AmountList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_globalRPC_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResultGetLatestL1AmountList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResultGetLatestL1AmountList) ProtoMessage() {}

func (x *ResultGetLatestL1AmountList) ProtoReflect() protoreflect.Message {
	mi := &file_globalRPC_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResultGetLatestL1AmountList.ProtoReflect.Descriptor instead.
func (*ResultGetLatestL1AmountList) Descriptor() ([]byte, []int) {
	return file_globalRPC_proto_rawDescGZIP(), []int{42}
}

func (x *ResultGetLatestL1AmountList) GetChainId() int64 {
	if x != nil {
		return x.ChainId
	}
	return 0
}

func (x *ResultGetLatestL1AmountList) GetAssetId() int64 {
	if x != nil {
		return x.AssetId
	}
	return 0
}

func (x *ResultGetLatestL1AmountList) GetTotalAmount() int64 {
	if x != nil {
		return x.TotalAmount
	}
	return 0
}

type RespGetLatestL1AmountList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status int64                          `protobuf:"varint,1,opt,name=Status,proto3" json:"Status,omitempty"`
	Msg    string                         `protobuf:"bytes,2,opt,name=Msg,proto3" json:"Msg,omitempty"`
	Err    string                         `protobuf:"bytes,3,opt,name=Err,proto3" json:"Err,omitempty"`
	Result []*ResultGetLatestL1AmountList `protobuf:"bytes,4,rep,name=Result,proto3" json:"Result,omitempty"`
}

func (x *RespGetLatestL1AmountList) Reset() {
	*x = RespGetLatestL1AmountList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_globalRPC_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespGetLatestL1AmountList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespGetLatestL1AmountList) ProtoMessage() {}

func (x *RespGetLatestL1AmountList) ProtoReflect() protoreflect.Message {
	mi := &file_globalRPC_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespGetLatestL1AmountList.ProtoReflect.Descriptor instead.
func (*RespGetLatestL1AmountList) Descriptor() ([]byte, []int) {
	return file_globalRPC_proto_rawDescGZIP(), []int{43}
}

func (x *RespGetLatestL1AmountList) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *RespGetLatestL1AmountList) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *RespGetLatestL1AmountList) GetErr() string {
	if x != nil {
		return x.Err
	}
	return ""
}

func (x *RespGetLatestL1AmountList) GetResult() []*ResultGetLatestL1AmountList {
	if x != nil {
		return x.Result
	}
	return nil
}

// getLatestL1AmountListByAssetId
type ReqGetLatestL1AmountListByAssetId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AssetId int64 `protobuf:"varint,1,opt,name=AssetId,proto3" json:"AssetId,omitempty"`
}

func (x *ReqGetLatestL1AmountListByAssetId) Reset() {
	*x = ReqGetLatestL1AmountListByAssetId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_globalRPC_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqGetLatestL1AmountListByAssetId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqGetLatestL1AmountListByAssetId) ProtoMessage() {}

func (x *ReqGetLatestL1AmountListByAssetId) ProtoReflect() protoreflect.Message {
	mi := &file_globalRPC_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqGetLatestL1AmountListByAssetId.ProtoReflect.Descriptor instead.
func (*ReqGetLatestL1AmountListByAssetId) Descriptor() ([]byte, []int) {
	return file_globalRPC_proto_rawDescGZIP(), []int{44}
}

func (x *ReqGetLatestL1AmountListByAssetId) GetAssetId() int64 {
	if x != nil {
		return x.AssetId
	}
	return 0
}

type ResultGetLatestL1AmountListByAssetId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChainId     int64 `protobuf:"varint,1,opt,name=ChainId,proto3" json:"ChainId,omitempty"`
	AssetId     int64 `protobuf:"varint,2,opt,name=AssetId,proto3" json:"AssetId,omitempty"`
	TotalAmount int64 `protobuf:"varint,3,opt,name=TotalAmount,proto3" json:"TotalAmount,omitempty"`
}

func (x *ResultGetLatestL1AmountListByAssetId) Reset() {
	*x = ResultGetLatestL1AmountListByAssetId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_globalRPC_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResultGetLatestL1AmountListByAssetId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResultGetLatestL1AmountListByAssetId) ProtoMessage() {}

func (x *ResultGetLatestL1AmountListByAssetId) ProtoReflect() protoreflect.Message {
	mi := &file_globalRPC_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResultGetLatestL1AmountListByAssetId.ProtoReflect.Descriptor instead.
func (*ResultGetLatestL1AmountListByAssetId) Descriptor() ([]byte, []int) {
	return file_globalRPC_proto_rawDescGZIP(), []int{45}
}

func (x *ResultGetLatestL1AmountListByAssetId) GetChainId() int64 {
	if x != nil {
		return x.ChainId
	}
	return 0
}

func (x *ResultGetLatestL1AmountListByAssetId) GetAssetId() int64 {
	if x != nil {
		return x.AssetId
	}
	return 0
}

func (x *ResultGetLatestL1AmountListByAssetId) GetTotalAmount() int64 {
	if x != nil {
		return x.TotalAmount
	}
	return 0
}

type RespGetLatestL1AmountListByAssetId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status int64                                   `protobuf:"varint,1,opt,name=Status,proto3" json:"Status,omitempty"`
	Msg    string                                  `protobuf:"bytes,2,opt,name=Msg,proto3" json:"Msg,omitempty"`
	Err    string                                  `protobuf:"bytes,3,opt,name=Err,proto3" json:"Err,omitempty"`
	Result []*ResultGetLatestL1AmountListByAssetId `protobuf:"bytes,4,rep,name=Result,proto3" json:"Result,omitempty"`
}

func (x *RespGetLatestL1AmountListByAssetId) Reset() {
	*x = RespGetLatestL1AmountListByAssetId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_globalRPC_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespGetLatestL1AmountListByAssetId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespGetLatestL1AmountListByAssetId) ProtoMessage() {}

func (x *RespGetLatestL1AmountListByAssetId) ProtoReflect() protoreflect.Message {
	mi := &file_globalRPC_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespGetLatestL1AmountListByAssetId.ProtoReflect.Descriptor instead.
func (*RespGetLatestL1AmountListByAssetId) Descriptor() ([]byte, []int) {
	return file_globalRPC_proto_rawDescGZIP(), []int{46}
}

func (x *RespGetLatestL1AmountListByAssetId) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *RespGetLatestL1AmountListByAssetId) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *RespGetLatestL1AmountListByAssetId) GetErr() string {
	if x != nil {
		return x.Err
	}
	return ""
}

func (x *RespGetLatestL1AmountListByAssetId) GetResult() []*ResultGetLatestL1AmountListByAssetId {
	if x != nil {
		return x.Result
	}
	return nil
}

// getLatestL1Amount
type ReqGetLatestL1Amount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChainId int64 `protobuf:"varint,1,opt,name=ChainId,proto3" json:"ChainId,omitempty"`
	AssetId int64 `protobuf:"varint,2,opt,name=AssetId,proto3" json:"AssetId,omitempty"`
}

func (x *ReqGetLatestL1Amount) Reset() {
	*x = ReqGetLatestL1Amount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_globalRPC_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqGetLatestL1Amount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqGetLatestL1Amount) ProtoMessage() {}

func (x *ReqGetLatestL1Amount) ProtoReflect() protoreflect.Message {
	mi := &file_globalRPC_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqGetLatestL1Amount.ProtoReflect.Descriptor instead.
func (*ReqGetLatestL1Amount) Descriptor() ([]byte, []int) {
	return file_globalRPC_proto_rawDescGZIP(), []int{47}
}

func (x *ReqGetLatestL1Amount) GetChainId() int64 {
	if x != nil {
		return x.ChainId
	}
	return 0
}

func (x *ReqGetLatestL1Amount) GetAssetId() int64 {
	if x != nil {
		return x.AssetId
	}
	return 0
}

type ResultGetLatestL1Amount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalAmount int64 `protobuf:"varint,1,opt,name=TotalAmount,proto3" json:"TotalAmount,omitempty"`
}

func (x *ResultGetLatestL1Amount) Reset() {
	*x = ResultGetLatestL1Amount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_globalRPC_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResultGetLatestL1Amount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResultGetLatestL1Amount) ProtoMessage() {}

func (x *ResultGetLatestL1Amount) ProtoReflect() protoreflect.Message {
	mi := &file_globalRPC_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResultGetLatestL1Amount.ProtoReflect.Descriptor instead.
func (*ResultGetLatestL1Amount) Descriptor() ([]byte, []int) {
	return file_globalRPC_proto_rawDescGZIP(), []int{48}
}

func (x *ResultGetLatestL1Amount) GetTotalAmount() int64 {
	if x != nil {
		return x.TotalAmount
	}
	return 0
}

type RespGetLatestL1Amount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status int64                    `protobuf:"varint,1,opt,name=Status,proto3" json:"Status,omitempty"`
	Msg    string                   `protobuf:"bytes,2,opt,name=Msg,proto3" json:"Msg,omitempty"`
	Err    string                   `protobuf:"bytes,3,opt,name=Err,proto3" json:"Err,omitempty"`
	Result *ResultGetLatestL1Amount `protobuf:"bytes,4,opt,name=Result,proto3" json:"Result,omitempty"`
}

func (x *RespGetLatestL1Amount) Reset() {
	*x = RespGetLatestL1Amount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_globalRPC_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespGetLatestL1Amount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespGetLatestL1Amount) ProtoMessage() {}

func (x *RespGetLatestL1Amount) ProtoReflect() protoreflect.Message {
	mi := &file_globalRPC_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespGetLatestL1Amount.ProtoReflect.Descriptor instead.
func (*RespGetLatestL1Amount) Descriptor() ([]byte, []int) {
	return file_globalRPC_proto_rawDescGZIP(), []int{49}
}

func (x *RespGetLatestL1Amount) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *RespGetLatestL1Amount) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *RespGetLatestL1Amount) GetErr() string {
	if x != nil {
		return x.Err
	}
	return ""
}

func (x *RespGetLatestL1Amount) GetResult() *ResultGetLatestL1Amount {
	if x != nil {
		return x.Result
	}
	return nil
}

var File_globalRPC_proto protoreflect.FileDescriptor

var file_globalRPC_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x52, 0x50, 0x43, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x0e, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x52, 0x50, 0x43, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x76, 0x0a, 0x1c, 0x52, 0x65, 0x71, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x74, 0x65, 0x73,
	0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x6f, 0x63, 0x6b, 0x41, 0x73, 0x73, 0x65,
	0x74, 0x12, 0x22, 0x0a, 0x0c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x18, 0x0a, 0x07, 0x41, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x41, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x12,
	0x18, 0x0a, 0x07, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x07, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x22, 0xdd, 0x01, 0x0a, 0x1f, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x6f, 0x63, 0x6b, 0x41, 0x73, 0x73, 0x65, 0x74, 0x12, 0x20, 0x0a,
	0x0b, 0x4c, 0x6f, 0x63, 0x6b, 0x41, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0b, 0x4c, 0x6f, 0x63, 0x6b, 0x41, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x12,
	0x22, 0x0a, 0x0c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x12, 0x18, 0x0a, 0x07, 0x41, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x41, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x12, 0x1c, 0x0a,
	0x09, 0x41, 0x73, 0x73, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x41, 0x73, 0x73, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x43,
	0x68, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x43, 0x68,
	0x61, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x4c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x41,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x4c, 0x6f, 0x63,
	0x6b, 0x65, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xa4, 0x01, 0x0a, 0x1d, 0x52, 0x65,
	0x73, 0x70, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x4c, 0x6f, 0x63, 0x6b, 0x41, 0x73, 0x73, 0x65, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x4d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x4d, 0x73, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x45, 0x72, 0x72, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x45, 0x72, 0x72, 0x12, 0x47, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c,
	0x52, 0x50, 0x43, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x47,
	0x65, 0x74, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4c,
	0x6f, 0x63, 0x6b, 0x41, 0x73, 0x73, 0x65, 0x74, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x22, 0x4f, 0x0a, 0x29, 0x52, 0x65, 0x71, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x6f, 0x63, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x42,
	0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x22, 0x0a,
	0x0c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x22, 0xea, 0x01, 0x0a, 0x2c, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x47, 0x65, 0x74, 0x4c,
	0x61, 0x74, 0x65, 0x73, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x6f, 0x63, 0x6b,
	0x49, 0x6e, 0x66, 0x6f, 0x42, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x12, 0x20, 0x0a, 0x0b, 0x4c, 0x6f, 0x63, 0x6b, 0x41, 0x73, 0x73, 0x65, 0x74, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x4c, 0x6f, 0x63, 0x6b, 0x41, 0x73, 0x73,
	0x65, 0x74, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x18, 0x0a, 0x07, 0x41, 0x73, 0x73, 0x65,
	0x74, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x41, 0x73, 0x73, 0x65, 0x74,
	0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x41, 0x73, 0x73, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x41, 0x73, 0x73, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x07, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x4c, 0x6f,
	0x63, 0x6b, 0x65, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0c, 0x4c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xbe,
	0x01, 0x0a, 0x2a, 0x52, 0x65, 0x73, 0x70, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x6f, 0x63, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x42,
	0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x16, 0x0a,
	0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x4d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x4d, 0x73, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x45, 0x72, 0x72, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x45, 0x72, 0x72, 0x12, 0x54, 0x0a, 0x06, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3c, 0x2e, 0x67, 0x6c, 0x6f, 0x62,
	0x61, 0x6c, 0x52, 0x50, 0x43, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x4c, 0x6f, 0x63, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22,
	0x59, 0x0a, 0x15, 0x52, 0x65, 0x71, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x70, 0x12, 0x22, 0x0a, 0x0c, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x1c, 0x0a, 0x09,
	0x50, 0x61, 0x69, 0x72, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x09, 0x50, 0x61, 0x69, 0x72, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x22, 0x8c, 0x02, 0x0a, 0x18, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x70, 0x12, 0x20, 0x0a, 0x0b, 0x4c, 0x69, 0x71, 0x75, 0x69,
	0x64, 0x69, 0x74, 0x79, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x4c, 0x69,
	0x71, 0x75, 0x69, 0x64, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x1a, 0x0a,
	0x08, 0x41, 0x73, 0x73, 0x65, 0x74, 0x41, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x08, 0x41, 0x73, 0x73, 0x65, 0x74, 0x41, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x41, 0x73, 0x73,
	0x65, 0x74, 0x41, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x41,
	0x73, 0x73, 0x65, 0x74, 0x41, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x41, 0x73, 0x73,
	0x65, 0x74, 0x42, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x41, 0x73, 0x73,
	0x65, 0x74, 0x42, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x41, 0x73, 0x73, 0x65, 0x74, 0x42, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x41, 0x73, 0x73, 0x65, 0x74,
	0x42, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x61, 0x69, 0x72, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x50, 0x61, 0x69, 0x72, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x12, 0x14, 0x0a, 0x05, 0x4c, 0x70, 0x45, 0x6e, 0x63, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x4c, 0x70, 0x45, 0x6e, 0x63, 0x22, 0x96, 0x01, 0x0a, 0x16, 0x52, 0x65,
	0x73, 0x70, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x4c, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x10, 0x0a, 0x03,
	0x4d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x4d, 0x73, 0x67, 0x12, 0x10,
	0x0a, 0x03, 0x45, 0x72, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x45, 0x72, 0x72,
	0x12, 0x40, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x28, 0x2e, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x52, 0x50, 0x43, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x74, 0x65, 0x73,
	0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x70, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x22, 0x4b, 0x0a, 0x25, 0x52, 0x65, 0x71, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x74, 0x65,
	0x73, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x79, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x22, 0x0a, 0x0c, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x22,
	0x47, 0x0a, 0x0b, 0x41, 0x73, 0x73, 0x65, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x18,
	0x0a, 0x07, 0x41, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x07, 0x41, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x42, 0x61, 0x6c, 0x61,
	0x6e, 0x63, 0x65, 0x45, 0x6e, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x42, 0x61,
	0x6c, 0x61, 0x6e, 0x63, 0x65, 0x45, 0x6e, 0x63, 0x22, 0xd9, 0x01, 0x0a, 0x28, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x22, 0x0a, 0x0c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x20, 0x0a, 0x0b, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x6b, 0x12, 0x49, 0x0a, 0x11, 0x41, 0x73, 0x73,
	0x65, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x52, 0x50, 0x43,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x52, 0x11, 0x41, 0x73, 0x73, 0x65, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x41, 0x73,
	0x73, 0x65, 0x74, 0x73, 0x22, 0xb6, 0x01, 0x0a, 0x26, 0x52, 0x65, 0x73, 0x70, 0x47, 0x65, 0x74,
	0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x42, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12,
	0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x4d, 0x73, 0x67, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x4d, 0x73, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x45, 0x72, 0x72,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x45, 0x72, 0x72, 0x12, 0x50, 0x0a, 0x06, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x67, 0x6c,
	0x6f, 0x62, 0x61, 0x6c, 0x52, 0x50, 0x43, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x5c, 0x0a,
	0x1c, 0x52, 0x65, 0x71, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x41, 0x73, 0x73, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x22, 0x0a,
	0x0c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x12, 0x18, 0x0a, 0x07, 0x41, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x07, 0x41, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x22, 0xd0, 0x01, 0x0a, 0x1f,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x73, 0x73, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x22, 0x0a, 0x0c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x12, 0x20, 0x0a, 0x0b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x50, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x50, 0x6b, 0x12, 0x49, 0x0a, 0x11, 0x41, 0x73, 0x73, 0x65, 0x74, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b,
	0x2e, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x52, 0x50, 0x43, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x41, 0x73, 0x73, 0x65, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x11, 0x41, 0x73, 0x73,
	0x65, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x22, 0xa4,
	0x01, 0x0a, 0x1d, 0x52, 0x65, 0x73, 0x70, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x73, 0x73, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x4d, 0x73, 0x67, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x4d, 0x73, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x45, 0x72,
	0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x45, 0x72, 0x72, 0x12, 0x47, 0x0a, 0x06,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x67,
	0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x52, 0x50, 0x43, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x41, 0x73, 0x73, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x34, 0x0a, 0x14, 0x52, 0x65, 0x71, 0x47, 0x65, 0x74, 0x4c,
	0x61, 0x74, 0x65, 0x73, 0x74, 0x50, 0x6f, 0x6f, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1c, 0x0a,
	0x09, 0x50, 0x61, 0x69, 0x72, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x09, 0x50, 0x61, 0x69, 0x72, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x22, 0xd3, 0x02, 0x0a, 0x17,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x50,
	0x6f, 0x6f, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x20, 0x0a, 0x0b, 0x4c, 0x69, 0x71, 0x75, 0x69,
	0x64, 0x69, 0x74, 0x79, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x4c, 0x69,
	0x71, 0x75, 0x69, 0x64, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x1a, 0x0a,
	0x08, 0x41, 0x73, 0x73, 0x65, 0x74, 0x41, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x08, 0x41, 0x73, 0x73, 0x65, 0x74, 0x41, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x41, 0x73, 0x73,
	0x65, 0x74, 0x41, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x41,
	0x73, 0x73, 0x65, 0x74, 0x41, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x41, 0x73, 0x73,
	0x65, 0x74, 0x41, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0c, 0x41, 0x73, 0x73, 0x65, 0x74, 0x41, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a,
	0x08, 0x41, 0x73, 0x73, 0x65, 0x74, 0x42, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x08, 0x41, 0x73, 0x73, 0x65, 0x74, 0x42, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x41, 0x73, 0x73,
	0x65, 0x74, 0x42, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x41,
	0x73, 0x73, 0x65, 0x74, 0x42, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x41, 0x73, 0x73,
	0x65, 0x74, 0x42, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0c, 0x41, 0x73, 0x73, 0x65, 0x74, 0x42, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1c, 0x0a,
	0x09, 0x50, 0x61, 0x69, 0x72, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x09, 0x50, 0x61, 0x69, 0x72, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x14, 0x0a, 0x05, 0x4c,
	0x70, 0x45, 0x6e, 0x63, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x4c, 0x70, 0x45, 0x6e,
	0x63, 0x22, 0x94, 0x01, 0x0a, 0x15, 0x52, 0x65, 0x73, 0x70, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x74,
	0x65, 0x73, 0x74, 0x50, 0x6f, 0x6f, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x4d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x4d, 0x73, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x45, 0x72, 0x72, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x45, 0x72, 0x72, 0x12, 0x3f, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c,
	0x52, 0x50, 0x43, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x47,
	0x65, 0x74, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x50, 0x6f, 0x6f, 0x6c, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x5d, 0x0a, 0x21, 0x52, 0x65, 0x71, 0x47,
	0x65, 0x74, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x54, 0x78, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x42,
	0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x22, 0x0a,
	0x0c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0xe0, 0x01, 0x0a, 0x08, 0x54, 0x78, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x41, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x41, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x12, 0x1c,
	0x0a, 0x09, 0x41, 0x73, 0x73, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x41, 0x73, 0x73, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x22, 0x0a, 0x0c,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x12, 0x20, 0x0a, 0x0b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x11, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x61, 0x6c,
	0x61, 0x6e, 0x63, 0x65, 0x45, 0x6e, 0x63, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x45, 0x6e, 0x63,
	0x12, 0x28, 0x0a, 0x0f, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x44, 0x65, 0x6c, 0x74, 0x61,
	0x45, 0x6e, 0x63, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x44, 0x65, 0x6c, 0x74, 0x61, 0x45, 0x6e, 0x63, 0x22, 0x92, 0x04, 0x0a, 0x24, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x54, 0x78,
	0x73, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x12, 0x16, 0x0a, 0x06, 0x54, 0x78, 0x48, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x54, 0x78, 0x48, 0x61, 0x73, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x54,
	0x78, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x54, 0x78, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x54, 0x78, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x54, 0x78, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x1e, 0x0a, 0x0a, 0x54, 0x78, 0x41, 0x73, 0x73, 0x65, 0x74, 0x41, 0x49, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0a, 0x54, 0x78, 0x41, 0x73, 0x73, 0x65, 0x74, 0x41, 0x49, 0x64, 0x12,
	0x1e, 0x0a, 0x0a, 0x54, 0x78, 0x41, 0x73, 0x73, 0x65, 0x74, 0x42, 0x49, 0x64, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0a, 0x54, 0x78, 0x41, 0x73, 0x73, 0x65, 0x74, 0x42, 0x49, 0x64, 0x12,
	0x36, 0x0a, 0x09, 0x54, 0x78, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x06, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x52, 0x50, 0x43, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x78, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x09, 0x54, 0x78,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x54, 0x78, 0x41, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x54, 0x78, 0x41, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x4e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x4e, 0x61, 0x74, 0x69,
	0x76, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x47, 0x61, 0x73,
	0x46, 0x65, 0x65, 0x41, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0d, 0x47, 0x61, 0x73, 0x46, 0x65, 0x65, 0x41, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x47, 0x61, 0x73, 0x46, 0x65, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x47, 0x61, 0x73, 0x46, 0x65, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x64,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x4d, 0x65, 0x6d, 0x6f, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4d,
	0x65, 0x6d, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x74, 0x18,
	0x10, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x74, 0x22,
	0xae, 0x01, 0x0a, 0x22, 0x52, 0x65, 0x73, 0x70, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x74, 0x65, 0x73,
	0x74, 0x54, 0x78, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x10,
	0x0a, 0x03, 0x4d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x4d, 0x73, 0x67,
	0x12, 0x10, 0x0a, 0x03, 0x45, 0x72, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x45,
	0x72, 0x72, 0x12, 0x4c, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x34, 0x2e, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x52, 0x50, 0x43, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x74,
	0x65, 0x73, 0x74, 0x54, 0x78, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x79, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x22, 0x96, 0x01, 0x0a, 0x2a, 0x52, 0x65, 0x71, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x74, 0x65, 0x73,
	0x74, 0x54, 0x78, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x41, 0x6e, 0x64, 0x54, 0x78, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x22, 0x0a, 0x0c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x12, 0x16, 0x0a, 0x06, 0x54, 0x78, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x06, 0x54, 0x78, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x4c,
	0x69, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x4c, 0x69, 0x6d, 0x69,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x22, 0xfd, 0x03, 0x0a, 0x0f, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x0a,
	0x06, 0x54, 0x78, 0x48, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x54,
	0x78, 0x48, 0x61, 0x73, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x54, 0x78, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x54, 0x78, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x54, 0x78, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x54, 0x78, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x54, 0x78, 0x41,
	0x73, 0x73, 0x65, 0x74, 0x41, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x54,
	0x78, 0x41, 0x73, 0x73, 0x65, 0x74, 0x41, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x54, 0x78, 0x41,
	0x73, 0x73, 0x65, 0x74, 0x42, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x54,
	0x78, 0x41, 0x73, 0x73, 0x65, 0x74, 0x42, 0x49, 0x64, 0x12, 0x36, 0x0a, 0x09, 0x54, 0x78, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x67,
	0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x52, 0x50, 0x43, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x54, 0x78,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x09, 0x54, 0x78, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x12, 0x1a, 0x0a, 0x08, 0x54, 0x78, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x54, 0x78, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x24, 0x0a,
	0x0d, 0x4e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x4e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x47, 0x61, 0x73, 0x46, 0x65, 0x65, 0x41, 0x73, 0x73,
	0x65, 0x74, 0x49, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x47, 0x61, 0x73, 0x46,
	0x65, 0x65, 0x41, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x47, 0x61, 0x73,
	0x46, 0x65, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x47, 0x61, 0x73, 0x46, 0x65,
	0x65, 0x12, 0x20, 0x0a, 0x0b, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x64,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x64, 0x12,
	0x18, 0x0a, 0x07, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x07, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x4d, 0x65, 0x6d,
	0x6f, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4d, 0x65, 0x6d, 0x6f, 0x12, 0x1a, 0x0a,
	0x08, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x74, 0x18, 0x10, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x74, 0x22, 0xae, 0x01, 0x0a, 0x2d, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x54, 0x78, 0x73,
	0x4c, 0x69, 0x73, 0x74, 0x42, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x41, 0x6e, 0x64, 0x54, 0x78, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x4c,
	0x69, 0x6d, 0x69, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x4c, 0x69, 0x6d, 0x69,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x06, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x6f, 0x74,
	0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x12,
	0x39, 0x0a, 0x07, 0x54, 0x78, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1f, 0x2e, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x52, 0x50, 0x43, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x07, 0x54, 0x78, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x22, 0xc0, 0x01, 0x0a, 0x2b, 0x52,
	0x65, 0x73, 0x70, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x54, 0x78, 0x73, 0x4c,
	0x69, 0x73, 0x74, 0x42, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x41, 0x6e, 0x64, 0x54, 0x78, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x4d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x4d, 0x73, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x45, 0x72, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x45, 0x72, 0x72, 0x12, 0x55, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3d, 0x2e, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x52,
	0x50, 0x43, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x47, 0x65,
	0x74, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x54, 0x78, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x79,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x41, 0x6e, 0x64, 0x54,
	0x78, 0x54, 0x79, 0x70, 0x65, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x3b, 0x0a,
	0x09, 0x52, 0x65, 0x71, 0x53, 0x65, 0x6e, 0x64, 0x54, 0x78, 0x12, 0x16, 0x0a, 0x06, 0x54, 0x78,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x54, 0x78, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x54, 0x78, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x54, 0x78, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x22, 0x0a, 0x0c, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x53, 0x65, 0x6e, 0x64, 0x54, 0x78, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x78,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x54, 0x78, 0x49, 0x64, 0x22, 0x7e,
	0x0a, 0x0a, 0x52, 0x65, 0x73, 0x70, 0x53, 0x65, 0x6e, 0x64, 0x54, 0x78, 0x12, 0x16, 0x0a, 0x06,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x4d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x4d, 0x73, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x45, 0x72, 0x72, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x45, 0x72, 0x72, 0x12, 0x34, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6c, 0x6f, 0x62, 0x61,
	0x6c, 0x52, 0x50, 0x43, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x53, 0x65, 0x6e, 0x64, 0x54, 0x78, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x84,
	0x01, 0x0a, 0x10, 0x52, 0x65, 0x71, 0x47, 0x65, 0x74, 0x53, 0x77, 0x61, 0x70, 0x41, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x61, 0x69, 0x72, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x50, 0x61, 0x69, 0x72, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x12, 0x18, 0x0a, 0x07, 0x41, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x07, 0x41, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x41,
	0x73, 0x73, 0x65, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0b, 0x41, 0x73, 0x73, 0x65, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x49, 0x73, 0x46, 0x72, 0x6f, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x49,
	0x73, 0x46, 0x72, 0x6f, 0x6d, 0x22, 0x7b, 0x0a, 0x13, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x47,
	0x65, 0x74, 0x53, 0x77, 0x61, 0x70, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09,
	0x50, 0x61, 0x69, 0x72, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x09, 0x50, 0x61, 0x69, 0x72, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x26, 0x0a, 0x0e, 0x52, 0x65,
	0x73, 0x41, 0x73, 0x73, 0x65, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0e, 0x52, 0x65, 0x73, 0x41, 0x73, 0x73, 0x65, 0x74, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x52, 0x65, 0x73, 0x41, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x52, 0x65, 0x73, 0x41, 0x73, 0x73, 0x65, 0x74,
	0x49, 0x64, 0x22, 0x8c, 0x01, 0x0a, 0x11, 0x52, 0x65, 0x73, 0x70, 0x47, 0x65, 0x74, 0x53, 0x77,
	0x61, 0x70, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x10, 0x0a, 0x03, 0x4d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x4d,
	0x73, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x45, 0x72, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x45, 0x72, 0x72, 0x12, 0x3b, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x52, 0x50, 0x43,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x47, 0x65, 0x74, 0x53,
	0x77, 0x61, 0x70, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x22, 0x49, 0x0a, 0x0d, 0x52, 0x65, 0x71, 0x47, 0x65, 0x74, 0x4c, 0x70, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x61, 0x69, 0x72, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x50, 0x61, 0x69, 0x72, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x12, 0x1a, 0x0a, 0x08, 0x4c, 0x50, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x08, 0x4c, 0x50, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xd2, 0x01, 0x0a,
	0x10, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x47, 0x65, 0x74, 0x4c, 0x70, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x41, 0x73, 0x73, 0x65, 0x74, 0x41, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x08, 0x41, 0x73, 0x73, 0x65, 0x74, 0x41, 0x49, 0x64, 0x12, 0x1e, 0x0a,
	0x0a, 0x41, 0x73, 0x73, 0x65, 0x74, 0x41, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x41, 0x73, 0x73, 0x65, 0x74, 0x41, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a,
	0x0c, 0x41, 0x73, 0x73, 0x65, 0x74, 0x41, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0c, 0x41, 0x73, 0x73, 0x65, 0x74, 0x41, 0x41, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x1a, 0x0a, 0x08, 0x41, 0x73, 0x73, 0x65, 0x74, 0x42, 0x49, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x08, 0x41, 0x73, 0x73, 0x65, 0x74, 0x42, 0x49, 0x64, 0x12, 0x1e, 0x0a,
	0x0a, 0x41, 0x73, 0x73, 0x65, 0x74, 0x42, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x41, 0x73, 0x73, 0x65, 0x74, 0x42, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a,
	0x0c, 0x41, 0x73, 0x73, 0x65, 0x74, 0x42, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0c, 0x41, 0x73, 0x73, 0x65, 0x74, 0x42, 0x41, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x22, 0x86, 0x01, 0x0a, 0x0e, 0x52, 0x65, 0x73, 0x70, 0x47, 0x65, 0x74, 0x4c, 0x70, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x10, 0x0a, 0x03,
	0x4d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x4d, 0x73, 0x67, 0x12, 0x10,
	0x0a, 0x03, 0x45, 0x72, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x45, 0x72, 0x72,
	0x12, 0x38, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x20, 0x2e, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x52, 0x50, 0x43, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x47, 0x65, 0x74, 0x4c, 0x70, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x2f, 0x0a, 0x0f, 0x52, 0x65,
	0x71, 0x47, 0x65, 0x74, 0x50, 0x61, 0x69, 0x72, 0x52, 0x61, 0x74, 0x69, 0x6f, 0x12, 0x1c, 0x0a,
	0x09, 0x50, 0x61, 0x69, 0x72, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x09, 0x50, 0x61, 0x69, 0x72, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x22, 0xd8, 0x01, 0x0a, 0x12,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x47, 0x65, 0x74, 0x50, 0x61, 0x69, 0x72, 0x52, 0x61, 0x74,
	0x69, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x61, 0x69, 0x72, 0x52, 0x61, 0x74, 0x69, 0x6f, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x09, 0x50, 0x61, 0x69, 0x72, 0x52, 0x61, 0x74, 0x69, 0x6f,
	0x12, 0x1a, 0x0a, 0x08, 0x41, 0x73, 0x73, 0x65, 0x74, 0x41, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x08, 0x41, 0x73, 0x73, 0x65, 0x74, 0x41, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c,
	0x41, 0x73, 0x73, 0x65, 0x74, 0x41, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0c, 0x41, 0x73, 0x73, 0x65, 0x74, 0x41, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x1a, 0x0a, 0x08, 0x41, 0x73, 0x73, 0x65, 0x74, 0x42, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x08, 0x41, 0x73, 0x73, 0x65, 0x74, 0x42, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c,
	0x41, 0x73, 0x73, 0x65, 0x74, 0x42, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0c, 0x41, 0x73, 0x73, 0x65, 0x74, 0x42, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x24, 0x0a, 0x0d, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x4c, 0x70, 0x41, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x4c, 0x70,
	0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x8a, 0x01, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x47,
	0x65, 0x74, 0x50, 0x61, 0x69, 0x72, 0x52, 0x61, 0x74, 0x69, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x4d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x4d, 0x73, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x45, 0x72, 0x72, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x45, 0x72, 0x72, 0x12, 0x3a, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c,
	0x52, 0x50, 0x43, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x47,
	0x65, 0x74, 0x50, 0x61, 0x69, 0x72, 0x52, 0x61, 0x74, 0x69, 0x6f, 0x52, 0x06, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x22, 0x13, 0x0a, 0x11, 0x52, 0x65, 0x71, 0x52, 0x65, 0x73, 0x65, 0x74, 0x47,
	0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x4d, 0x61, 0x70, 0x22, 0x50, 0x0a, 0x12, 0x52, 0x65, 0x73, 0x70,
	0x52, 0x65, 0x73, 0x65, 0x74, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x4d, 0x61, 0x70, 0x12, 0x16,
	0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x4d, 0x73, 0x67, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x4d, 0x73, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x45, 0x72, 0x72, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x45, 0x72, 0x72, 0x22, 0x1a, 0x0a, 0x18, 0x52, 0x65,
	0x71, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x4c, 0x31, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x73, 0x0a, 0x1b, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x47, 0x65, 0x74, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x4c, 0x31, 0x41, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x12,
	0x18, 0x0a, 0x07, 0x41, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x07, 0x41, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x54, 0x6f, 0x74,
	0x61, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b,
	0x54, 0x6f, 0x74, 0x61, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x9c, 0x01, 0x0a, 0x19,
	0x52, 0x65, 0x73, 0x70, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x4c, 0x31, 0x41,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x10, 0x0a, 0x03, 0x4d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x4d, 0x73, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x45, 0x72, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x45, 0x72, 0x72, 0x12, 0x43, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x52, 0x50,
	0x43, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x47, 0x65, 0x74,
	0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x4c, 0x31, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x3d, 0x0a, 0x21, 0x52, 0x65,
	0x71, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x4c, 0x31, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x79, 0x41, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x12,
	0x18, 0x0a, 0x07, 0x41, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x07, 0x41, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x22, 0x7c, 0x0a, 0x24, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x4c, 0x31, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x79, 0x41, 0x73, 0x73, 0x65, 0x74, 0x49,
	0x64, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x07, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x41,
	0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x41, 0x73,
	0x73, 0x65, 0x74, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x54, 0x6f, 0x74, 0x61,
	0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xae, 0x01, 0x0a, 0x22, 0x52, 0x65, 0x73, 0x70,
	0x47, 0x65, 0x74, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x4c, 0x31, 0x41, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x79, 0x41, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x4d, 0x73, 0x67, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x4d, 0x73, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x45, 0x72, 0x72, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x45, 0x72, 0x72, 0x12, 0x4c, 0x0a, 0x06, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x67, 0x6c, 0x6f,
	0x62, 0x61, 0x6c, 0x52, 0x50, 0x43, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x4c, 0x31, 0x41, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x79, 0x41, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64,
	0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x4a, 0x0a, 0x14, 0x52, 0x65, 0x71, 0x47,
	0x65, 0x74, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x4c, 0x31, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x18, 0x0a, 0x07, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x07, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x41, 0x73,
	0x73, 0x65, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x41, 0x73, 0x73,
	0x65, 0x74, 0x49, 0x64, 0x22, 0x3b, 0x0a, 0x17, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x47, 0x65,
	0x74, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x4c, 0x31, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x20, 0x0a, 0x0b, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x22, 0x94, 0x01, 0x0a, 0x15, 0x52, 0x65, 0x73, 0x70, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x74,
	0x65, 0x73, 0x74, 0x4c, 0x31, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x4d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x4d, 0x73, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x45, 0x72, 0x72, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x45, 0x72, 0x72, 0x12, 0x3f, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c,
	0x52, 0x50, 0x43, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x47,
	0x65, 0x74, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x4c, 0x31, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x52, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x32, 0x97, 0x0e, 0x0a, 0x09, 0x67, 0x6c, 0x6f,
	0x62, 0x61, 0x6c, 0x52, 0x50, 0x43, 0x12, 0x60, 0x0a, 0x11, 0x67, 0x65, 0x74, 0x4c, 0x61, 0x74,
	0x65, 0x73, 0x74, 0x50, 0x6f, 0x6f, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x24, 0x2e, 0x67, 0x6c,
	0x6f, 0x62, 0x61, 0x6c, 0x52, 0x50, 0x43, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x71,
	0x47, 0x65, 0x74, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x50, 0x6f, 0x6f, 0x6c, 0x49, 0x6e, 0x66,
	0x6f, 0x1a, 0x25, 0x2e, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x52, 0x50, 0x43, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74,
	0x50, 0x6f, 0x6f, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x78, 0x0a, 0x19, 0x67, 0x65, 0x74, 0x4c,
	0x61, 0x74, 0x65, 0x73, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x73, 0x73, 0x65,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2c, 0x2e, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x52, 0x50,
	0x43, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x71, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x74,
	0x65, 0x73, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x73, 0x73, 0x65, 0x74, 0x49,
	0x6e, 0x66, 0x6f, 0x1a, 0x2d, 0x2e, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x52, 0x50, 0x43, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x74, 0x65,
	0x73, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x73, 0x73, 0x65, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x93, 0x01, 0x0a, 0x22, 0x67, 0x65, 0x74, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x79, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x35, 0x2e, 0x67, 0x6c, 0x6f, 0x62,
	0x61, 0x6c, 0x52, 0x50, 0x43, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x71, 0x47, 0x65,
	0x74, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x42, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x1a, 0x36, 0x2e, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x52, 0x50, 0x43, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x79, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x78, 0x0a, 0x19, 0x67, 0x65, 0x74, 0x4c,
	0x61, 0x74, 0x65, 0x73, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x6f, 0x63, 0x6b,
	0x41, 0x73, 0x73, 0x65, 0x74, 0x12, 0x2c, 0x2e, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x52, 0x50,
	0x43, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x71, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x74,
	0x65, 0x73, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x6f, 0x63, 0x6b, 0x41, 0x73,
	0x73, 0x65, 0x74, 0x1a, 0x2d, 0x2e, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x52, 0x50, 0x43, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x74, 0x65,
	0x73, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x6f, 0x63, 0x6b, 0x41, 0x73, 0x73,
	0x65, 0x74, 0x12, 0x9f, 0x01, 0x0a, 0x26, 0x67, 0x65, 0x74, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x6f, 0x63, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x42,
	0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x39, 0x2e,
	0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x52, 0x50, 0x43, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52,
	0x65, 0x71, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x4c, 0x6f, 0x63, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x79, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x1a, 0x3a, 0x2e, 0x67, 0x6c, 0x6f, 0x62, 0x61,
	0x6c, 0x52, 0x50, 0x43, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x47, 0x65,
	0x74, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x6f,
	0x63, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x12, 0x63, 0x0a, 0x12, 0x67, 0x65, 0x74, 0x4c, 0x61, 0x74, 0x65, 0x73,
	0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x70, 0x12, 0x25, 0x2e, 0x67, 0x6c, 0x6f,
	0x62, 0x61, 0x6c, 0x52, 0x50, 0x43, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x71, 0x47,
	0x65, 0x74, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4c,
	0x70, 0x1a, 0x26, 0x2e, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x52, 0x50, 0x43, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x70, 0x12, 0x87, 0x01, 0x0a, 0x1e, 0x67, 0x65,
	0x74, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x54, 0x78, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x79,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x31, 0x2e, 0x67,
	0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x52, 0x50, 0x43, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65,
	0x71, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x54, 0x78, 0x73, 0x4c, 0x69, 0x73,
	0x74, 0x42, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x1a,
	0x32, 0x2e, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x52, 0x50, 0x43, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x54, 0x78,
	0x73, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x12, 0xa2, 0x01, 0x0a, 0x27, 0x67, 0x65, 0x74, 0x4c, 0x61, 0x74, 0x65, 0x73,
	0x74, 0x54, 0x78, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x41, 0x6e, 0x64, 0x54, 0x78, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x3a, 0x2e, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x52, 0x50, 0x43, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x52, 0x65, 0x71, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x54, 0x78, 0x73,
	0x4c, 0x69, 0x73, 0x74, 0x42, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x41, 0x6e, 0x64, 0x54, 0x78, 0x54, 0x79, 0x70, 0x65, 0x1a, 0x3b, 0x2e, 0x67, 0x6c,
	0x6f, 0x62, 0x61, 0x6c, 0x52, 0x50, 0x43, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x54, 0x78, 0x73, 0x4c, 0x69, 0x73,
	0x74, 0x42, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x41,
	0x6e, 0x64, 0x54, 0x78, 0x54, 0x79, 0x70, 0x65, 0x12, 0x3f, 0x0a, 0x06, 0x73, 0x65, 0x6e, 0x64,
	0x54, 0x78, 0x12, 0x19, 0x2e, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x52, 0x50, 0x43, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x71, 0x53, 0x65, 0x6e, 0x64, 0x54, 0x78, 0x1a, 0x1a, 0x2e,
	0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x52, 0x50, 0x43, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52,
	0x65, 0x73, 0x70, 0x53, 0x65, 0x6e, 0x64, 0x54, 0x78, 0x12, 0x4b, 0x0a, 0x0a, 0x67, 0x65, 0x74,
	0x4c, 0x70, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1d, 0x2e, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c,
	0x52, 0x50, 0x43, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x71, 0x47, 0x65, 0x74, 0x4c,
	0x70, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x1a, 0x1e, 0x2e, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x52,
	0x50, 0x43, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x47, 0x65, 0x74, 0x4c,
	0x70, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x51, 0x0a, 0x0c, 0x67, 0x65, 0x74, 0x50, 0x61, 0x69,
	0x72, 0x52, 0x61, 0x74, 0x69, 0x6f, 0x12, 0x1f, 0x2e, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x52,
	0x50, 0x43, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x71, 0x47, 0x65, 0x74, 0x50, 0x61,
	0x69, 0x72, 0x52, 0x61, 0x74, 0x69, 0x6f, 0x1a, 0x20, 0x2e, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c,
	0x52, 0x50, 0x43, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x47, 0x65, 0x74,
	0x50, 0x61, 0x69, 0x72, 0x52, 0x61, 0x74, 0x69, 0x6f, 0x12, 0x54, 0x0a, 0x0d, 0x67, 0x65, 0x74,
	0x53, 0x77, 0x61, 0x70, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x20, 0x2e, 0x67, 0x6c, 0x6f,
	0x62, 0x61, 0x6c, 0x52, 0x50, 0x43, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x71, 0x47,
	0x65, 0x74, 0x53, 0x77, 0x61, 0x70, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x1a, 0x21, 0x2e, 0x67,
	0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x52, 0x50, 0x43, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65,
	0x73, 0x70, 0x47, 0x65, 0x74, 0x53, 0x77, 0x61, 0x70, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x57, 0x0a, 0x0e, 0x72, 0x65, 0x73, 0x65, 0x74, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x4d, 0x61,
	0x70, 0x12, 0x21, 0x2e, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x52, 0x50, 0x43, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x52, 0x65, 0x71, 0x52, 0x65, 0x73, 0x65, 0x74, 0x47, 0x6c, 0x6f, 0x62, 0x61,
	0x6c, 0x4d, 0x61, 0x70, 0x1a, 0x22, 0x2e, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x52, 0x50, 0x43,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x52, 0x65, 0x73, 0x65, 0x74, 0x47,
	0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x4d, 0x61, 0x70, 0x12, 0x60, 0x0a, 0x11, 0x67, 0x65, 0x74, 0x4c,
	0x61, 0x74, 0x65, 0x73, 0x74, 0x4c, 0x31, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x24, 0x2e,
	0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x52, 0x50, 0x43, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52,
	0x65, 0x71, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x4c, 0x31, 0x41, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x1a, 0x25, 0x2e, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x52, 0x50, 0x43, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x74, 0x65,
	0x73, 0x74, 0x4c, 0x31, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x6c, 0x0a, 0x15, 0x67, 0x65,
	0x74, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x4c, 0x31, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x28, 0x2e, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x52, 0x50, 0x43, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x71, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x74, 0x65, 0x73,
	0x74, 0x4c, 0x31, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x1a, 0x29, 0x2e,
	0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x52, 0x50, 0x43, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52,
	0x65, 0x73, 0x70, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x4c, 0x31, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x87, 0x01, 0x0a, 0x1e, 0x67, 0x65, 0x74,
	0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x4c, 0x31, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x69,
	0x73, 0x74, 0x42, 0x79, 0x41, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x12, 0x31, 0x2e, 0x67, 0x6c,
	0x6f, 0x62, 0x61, 0x6c, 0x52, 0x50, 0x43, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x71,
	0x47, 0x65, 0x74, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x4c, 0x31, 0x41, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x79, 0x41, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x1a, 0x32,
	0x2e, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x52, 0x50, 0x43, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x52, 0x65, 0x73, 0x70, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x4c, 0x31, 0x41,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x79, 0x41, 0x73, 0x73, 0x65, 0x74,
	0x49, 0x64, 0x42, 0x12, 0x5a, 0x10, 0x2e, 0x2f, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x52, 0x50,
	0x43, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_globalRPC_proto_rawDescOnce sync.Once
	file_globalRPC_proto_rawDescData = file_globalRPC_proto_rawDesc
)

func file_globalRPC_proto_rawDescGZIP() []byte {
	file_globalRPC_proto_rawDescOnce.Do(func() {
		file_globalRPC_proto_rawDescData = protoimpl.X.CompressGZIP(file_globalRPC_proto_rawDescData)
	})
	return file_globalRPC_proto_rawDescData
}

var file_globalRPC_proto_msgTypes = make([]protoimpl.MessageInfo, 50)
var file_globalRPC_proto_goTypes = []interface{}{
	(*ReqGetLatestAccountLockAsset)(nil),                  // 0: globalRPCProto.ReqGetLatestAccountLockAsset
	(*ResultGetLatestAccountLockAsset)(nil),               // 1: globalRPCProto.ResultGetLatestAccountLockAsset
	(*RespGetLatestAccountLockAsset)(nil),                 // 2: globalRPCProto.RespGetLatestAccountLockAsset
	(*ReqGetLatestAccountLockInfoByAccountIndex)(nil),     // 3: globalRPCProto.ReqGetLatestAccountLockInfoByAccountIndex
	(*ResultGetLatestAccountLockInfoByAccountIndex)(nil),  // 4: globalRPCProto.ResultGetLatestAccountLockInfoByAccountIndex
	(*RespGetLatestAccountLockInfoByAccountIndex)(nil),    // 5: globalRPCProto.RespGetLatestAccountLockInfoByAccountIndex
	(*ReqGetLatestAccountLp)(nil),                         // 6: globalRPCProto.ReqGetLatestAccountLp
	(*ResultGetLatestAccountLp)(nil),                      // 7: globalRPCProto.ResultGetLatestAccountLp
	(*RespGetLatestAccountLp)(nil),                        // 8: globalRPCProto.RespGetLatestAccountLp
	(*ReqGetLatestAccountInfoByAccountIndex)(nil),         // 9: globalRPCProto.ReqGetLatestAccountInfoByAccountIndex
	(*AssetResult)(nil),                                   // 10: globalRPCProto.AssetResult
	(*ResultGetLatestAccountInfoByAccountIndex)(nil),      // 11: globalRPCProto.ResultGetLatestAccountInfoByAccountIndex
	(*RespGetLatestAccountInfoByAccountIndex)(nil),        // 12: globalRPCProto.RespGetLatestAccountInfoByAccountIndex
	(*ReqGetLatestAccountAssetInfo)(nil),                  // 13: globalRPCProto.ReqGetLatestAccountAssetInfo
	(*ResultGetLatestAccountAssetInfo)(nil),               // 14: globalRPCProto.ResultGetLatestAccountAssetInfo
	(*RespGetLatestAccountAssetInfo)(nil),                 // 15: globalRPCProto.RespGetLatestAccountAssetInfo
	(*ReqGetLatestPoolInfo)(nil),                          // 16: globalRPCProto.ReqGetLatestPoolInfo
	(*ResultGetLatestPoolInfo)(nil),                       // 17: globalRPCProto.ResultGetLatestPoolInfo
	(*RespGetLatestPoolInfo)(nil),                         // 18: globalRPCProto.RespGetLatestPoolInfo
	(*ReqGetLatestTxsListByAccountIndex)(nil),             // 19: globalRPCProto.ReqGetLatestTxsListByAccountIndex
	(*TxDetail)(nil),                                      // 20: globalRPCProto.TxDetail
	(*ResultGetLatestTxsListByAccountIndex)(nil),          // 21: globalRPCProto.ResultGetLatestTxsListByAccountIndex
	(*RespGetLatestTxsListByAccountIndex)(nil),            // 22: globalRPCProto.RespGetLatestTxsListByAccountIndex
	(*ReqGetLatestTxsListByAccountIndexAndTxType)(nil),    // 23: globalRPCProto.ReqGetLatestTxsListByAccountIndexAndTxType
	(*TransactionInfo)(nil),                               // 24: globalRPCProto.TransactionInfo
	(*ResultGetLatestTxsListByAccountIndexAndTxType)(nil), // 25: globalRPCProto.ResultGetLatestTxsListByAccountIndexAndTxType
	(*RespGetLatestTxsListByAccountIndexAndTxType)(nil),   // 26: globalRPCProto.RespGetLatestTxsListByAccountIndexAndTxType
	(*ReqSendTx)(nil),                                     // 27: globalRPCProto.ReqSendTx
	(*ResultSendTx)(nil),                                  // 28: globalRPCProto.ResultSendTx
	(*RespSendTx)(nil),                                    // 29: globalRPCProto.RespSendTx
	(*ReqGetSwapAmount)(nil),                              // 30: globalRPCProto.ReqGetSwapAmount
	(*ResultGetSwapAmount)(nil),                           // 31: globalRPCProto.ResultGetSwapAmount
	(*RespGetSwapAmount)(nil),                             // 32: globalRPCProto.RespGetSwapAmount
	(*ReqGetLpValue)(nil),                                 // 33: globalRPCProto.ReqGetLpValue
	(*ResultGetLpValue)(nil),                              // 34: globalRPCProto.ResultGetLpValue
	(*RespGetLpValue)(nil),                                // 35: globalRPCProto.RespGetLpValue
	(*ReqGetPairRatio)(nil),                               // 36: globalRPCProto.ReqGetPairRatio
	(*ResultGetPairRatio)(nil),                            // 37: globalRPCProto.ResultGetPairRatio
	(*RespGetPairRatio)(nil),                              // 38: globalRPCProto.RespGetPairRatio
	(*ReqResetGlobalMap)(nil),                             // 39: globalRPCProto.ReqResetGlobalMap
	(*RespResetGlobalMap)(nil),                            // 40: globalRPCProto.RespResetGlobalMap
	(*ReqGetLatestL1AmountList)(nil),                      // 41: globalRPCProto.ReqGetLatestL1AmountList
	(*ResultGetLatestL1AmountList)(nil),                   // 42: globalRPCProto.ResultGetLatestL1AmountList
	(*RespGetLatestL1AmountList)(nil),                     // 43: globalRPCProto.RespGetLatestL1AmountList
	(*ReqGetLatestL1AmountListByAssetId)(nil),             // 44: globalRPCProto.ReqGetLatestL1AmountListByAssetId
	(*ResultGetLatestL1AmountListByAssetId)(nil),          // 45: globalRPCProto.ResultGetLatestL1AmountListByAssetId
	(*RespGetLatestL1AmountListByAssetId)(nil),            // 46: globalRPCProto.RespGetLatestL1AmountListByAssetId
	(*ReqGetLatestL1Amount)(nil),                          // 47: globalRPCProto.ReqGetLatestL1Amount
	(*ResultGetLatestL1Amount)(nil),                       // 48: globalRPCProto.ResultGetLatestL1Amount
	(*RespGetLatestL1Amount)(nil),                         // 49: globalRPCProto.RespGetLatestL1Amount
}
var file_globalRPC_proto_depIdxs = []int32{
	1,  // 0: globalRPCProto.RespGetLatestAccountLockAsset.Result:type_name -> globalRPCProto.ResultGetLatestAccountLockAsset
	4,  // 1: globalRPCProto.RespGetLatestAccountLockInfoByAccountIndex.Result:type_name -> globalRPCProto.ResultGetLatestAccountLockInfoByAccountIndex
	7,  // 2: globalRPCProto.RespGetLatestAccountLp.Result:type_name -> globalRPCProto.ResultGetLatestAccountLp
	10, // 3: globalRPCProto.ResultGetLatestAccountInfoByAccountIndex.AssetResultAssets:type_name -> globalRPCProto.AssetResult
	11, // 4: globalRPCProto.RespGetLatestAccountInfoByAccountIndex.Result:type_name -> globalRPCProto.ResultGetLatestAccountInfoByAccountIndex
	10, // 5: globalRPCProto.ResultGetLatestAccountAssetInfo.AssetResultAssets:type_name -> globalRPCProto.AssetResult
	14, // 6: globalRPCProto.RespGetLatestAccountAssetInfo.Result:type_name -> globalRPCProto.ResultGetLatestAccountAssetInfo
	17, // 7: globalRPCProto.RespGetLatestPoolInfo.Result:type_name -> globalRPCProto.ResultGetLatestPoolInfo
	20, // 8: globalRPCProto.ResultGetLatestTxsListByAccountIndex.TxDetails:type_name -> globalRPCProto.TxDetail
	21, // 9: globalRPCProto.RespGetLatestTxsListByAccountIndex.Result:type_name -> globalRPCProto.ResultGetLatestTxsListByAccountIndex
	20, // 10: globalRPCProto.TransactionInfo.TxDetails:type_name -> globalRPCProto.TxDetail
	24, // 11: globalRPCProto.ResultGetLatestTxsListByAccountIndexAndTxType.TxsList:type_name -> globalRPCProto.TransactionInfo
	25, // 12: globalRPCProto.RespGetLatestTxsListByAccountIndexAndTxType.Result:type_name -> globalRPCProto.ResultGetLatestTxsListByAccountIndexAndTxType
	28, // 13: globalRPCProto.RespSendTx.Result:type_name -> globalRPCProto.ResultSendTx
	31, // 14: globalRPCProto.RespGetSwapAmount.Result:type_name -> globalRPCProto.ResultGetSwapAmount
	34, // 15: globalRPCProto.RespGetLpValue.Result:type_name -> globalRPCProto.ResultGetLpValue
	37, // 16: globalRPCProto.RespGetPairRatio.Result:type_name -> globalRPCProto.ResultGetPairRatio
	42, // 17: globalRPCProto.RespGetLatestL1AmountList.Result:type_name -> globalRPCProto.ResultGetLatestL1AmountList
	45, // 18: globalRPCProto.RespGetLatestL1AmountListByAssetId.Result:type_name -> globalRPCProto.ResultGetLatestL1AmountListByAssetId
	48, // 19: globalRPCProto.RespGetLatestL1Amount.Result:type_name -> globalRPCProto.ResultGetLatestL1Amount
	16, // 20: globalRPCProto.globalRPC.getLatestPoolInfo:input_type -> globalRPCProto.ReqGetLatestPoolInfo
	13, // 21: globalRPCProto.globalRPC.getLatestAccountAssetInfo:input_type -> globalRPCProto.ReqGetLatestAccountAssetInfo
	9,  // 22: globalRPCProto.globalRPC.getLatestAccountInfoByAccountIndex:input_type -> globalRPCProto.ReqGetLatestAccountInfoByAccountIndex
	0,  // 23: globalRPCProto.globalRPC.getLatestAccountLockAsset:input_type -> globalRPCProto.ReqGetLatestAccountLockAsset
	3,  // 24: globalRPCProto.globalRPC.getLatestAccountLockInfoByAccountIndex:input_type -> globalRPCProto.ReqGetLatestAccountLockInfoByAccountIndex
	6,  // 25: globalRPCProto.globalRPC.getLatestAccountLp:input_type -> globalRPCProto.ReqGetLatestAccountLp
	19, // 26: globalRPCProto.globalRPC.getLatestTxsListByAccountIndex:input_type -> globalRPCProto.ReqGetLatestTxsListByAccountIndex
	23, // 27: globalRPCProto.globalRPC.getLatestTxsListByAccountIndexAndTxType:input_type -> globalRPCProto.ReqGetLatestTxsListByAccountIndexAndTxType
	27, // 28: globalRPCProto.globalRPC.sendTx:input_type -> globalRPCProto.ReqSendTx
	33, // 29: globalRPCProto.globalRPC.getLpValue:input_type -> globalRPCProto.ReqGetLpValue
	36, // 30: globalRPCProto.globalRPC.getPairRatio:input_type -> globalRPCProto.ReqGetPairRatio
	30, // 31: globalRPCProto.globalRPC.getSwapAmount:input_type -> globalRPCProto.ReqGetSwapAmount
	39, // 32: globalRPCProto.globalRPC.resetGlobalMap:input_type -> globalRPCProto.ReqResetGlobalMap
	47, // 33: globalRPCProto.globalRPC.getLatestL1Amount:input_type -> globalRPCProto.ReqGetLatestL1Amount
	41, // 34: globalRPCProto.globalRPC.getLatestL1AmountList:input_type -> globalRPCProto.ReqGetLatestL1AmountList
	44, // 35: globalRPCProto.globalRPC.getLatestL1AmountListByAssetId:input_type -> globalRPCProto.ReqGetLatestL1AmountListByAssetId
	18, // 36: globalRPCProto.globalRPC.getLatestPoolInfo:output_type -> globalRPCProto.RespGetLatestPoolInfo
	15, // 37: globalRPCProto.globalRPC.getLatestAccountAssetInfo:output_type -> globalRPCProto.RespGetLatestAccountAssetInfo
	12, // 38: globalRPCProto.globalRPC.getLatestAccountInfoByAccountIndex:output_type -> globalRPCProto.RespGetLatestAccountInfoByAccountIndex
	2,  // 39: globalRPCProto.globalRPC.getLatestAccountLockAsset:output_type -> globalRPCProto.RespGetLatestAccountLockAsset
	5,  // 40: globalRPCProto.globalRPC.getLatestAccountLockInfoByAccountIndex:output_type -> globalRPCProto.RespGetLatestAccountLockInfoByAccountIndex
	8,  // 41: globalRPCProto.globalRPC.getLatestAccountLp:output_type -> globalRPCProto.RespGetLatestAccountLp
	22, // 42: globalRPCProto.globalRPC.getLatestTxsListByAccountIndex:output_type -> globalRPCProto.RespGetLatestTxsListByAccountIndex
	26, // 43: globalRPCProto.globalRPC.getLatestTxsListByAccountIndexAndTxType:output_type -> globalRPCProto.RespGetLatestTxsListByAccountIndexAndTxType
	29, // 44: globalRPCProto.globalRPC.sendTx:output_type -> globalRPCProto.RespSendTx
	35, // 45: globalRPCProto.globalRPC.getLpValue:output_type -> globalRPCProto.RespGetLpValue
	38, // 46: globalRPCProto.globalRPC.getPairRatio:output_type -> globalRPCProto.RespGetPairRatio
	32, // 47: globalRPCProto.globalRPC.getSwapAmount:output_type -> globalRPCProto.RespGetSwapAmount
	40, // 48: globalRPCProto.globalRPC.resetGlobalMap:output_type -> globalRPCProto.RespResetGlobalMap
	49, // 49: globalRPCProto.globalRPC.getLatestL1Amount:output_type -> globalRPCProto.RespGetLatestL1Amount
	43, // 50: globalRPCProto.globalRPC.getLatestL1AmountList:output_type -> globalRPCProto.RespGetLatestL1AmountList
	46, // 51: globalRPCProto.globalRPC.getLatestL1AmountListByAssetId:output_type -> globalRPCProto.RespGetLatestL1AmountListByAssetId
	36, // [36:52] is the sub-list for method output_type
	20, // [20:36] is the sub-list for method input_type
	20, // [20:20] is the sub-list for extension type_name
	20, // [20:20] is the sub-list for extension extendee
	0,  // [0:20] is the sub-list for field type_name
}

func init() { file_globalRPC_proto_init() }
func file_globalRPC_proto_init() {
	if File_globalRPC_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_globalRPC_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqGetLatestAccountLockAsset); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_globalRPC_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResultGetLatestAccountLockAsset); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_globalRPC_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RespGetLatestAccountLockAsset); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_globalRPC_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqGetLatestAccountLockInfoByAccountIndex); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_globalRPC_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResultGetLatestAccountLockInfoByAccountIndex); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_globalRPC_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RespGetLatestAccountLockInfoByAccountIndex); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_globalRPC_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqGetLatestAccountLp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_globalRPC_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResultGetLatestAccountLp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_globalRPC_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RespGetLatestAccountLp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_globalRPC_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqGetLatestAccountInfoByAccountIndex); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_globalRPC_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AssetResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_globalRPC_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResultGetLatestAccountInfoByAccountIndex); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_globalRPC_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RespGetLatestAccountInfoByAccountIndex); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_globalRPC_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqGetLatestAccountAssetInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_globalRPC_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResultGetLatestAccountAssetInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_globalRPC_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RespGetLatestAccountAssetInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_globalRPC_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqGetLatestPoolInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_globalRPC_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResultGetLatestPoolInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_globalRPC_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RespGetLatestPoolInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_globalRPC_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqGetLatestTxsListByAccountIndex); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_globalRPC_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TxDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_globalRPC_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResultGetLatestTxsListByAccountIndex); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_globalRPC_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RespGetLatestTxsListByAccountIndex); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_globalRPC_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqGetLatestTxsListByAccountIndexAndTxType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_globalRPC_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransactionInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_globalRPC_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResultGetLatestTxsListByAccountIndexAndTxType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_globalRPC_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RespGetLatestTxsListByAccountIndexAndTxType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_globalRPC_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqSendTx); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_globalRPC_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResultSendTx); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_globalRPC_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RespSendTx); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_globalRPC_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqGetSwapAmount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_globalRPC_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResultGetSwapAmount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_globalRPC_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RespGetSwapAmount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_globalRPC_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqGetLpValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_globalRPC_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResultGetLpValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_globalRPC_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RespGetLpValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_globalRPC_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqGetPairRatio); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_globalRPC_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResultGetPairRatio); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_globalRPC_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RespGetPairRatio); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_globalRPC_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqResetGlobalMap); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_globalRPC_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RespResetGlobalMap); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_globalRPC_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqGetLatestL1AmountList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_globalRPC_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResultGetLatestL1AmountList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_globalRPC_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RespGetLatestL1AmountList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_globalRPC_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqGetLatestL1AmountListByAssetId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_globalRPC_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResultGetLatestL1AmountListByAssetId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_globalRPC_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RespGetLatestL1AmountListByAssetId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_globalRPC_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqGetLatestL1Amount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_globalRPC_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResultGetLatestL1Amount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_globalRPC_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RespGetLatestL1Amount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_globalRPC_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   50,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_globalRPC_proto_goTypes,
		DependencyIndexes: file_globalRPC_proto_depIdxs,
		MessageInfos:      file_globalRPC_proto_msgTypes,
	}.Build()
	File_globalRPC_proto = out.File
	file_globalRPC_proto_rawDesc = nil
	file_globalRPC_proto_goTypes = nil
	file_globalRPC_proto_depIdxs = nil
}
