// Code generated by goctl. DO NOT EDIT!
// Source: globalRPC.proto

package server

import (
	"context"

	"github.com/zecrey-labs/zecrey-legend/service/rpc/globalRPC/globalRPCProto"
	"github.com/zecrey-labs/zecrey-legend/service/rpc/globalRPC/internal/logic"
	"github.com/zecrey-labs/zecrey-legend/service/rpc/globalRPC/internal/svc"
)

type GlobalRPCServer struct {
	svcCtx *svc.ServiceContext
	globalRPCProto.UnimplementedGlobalRPCServer
}

func NewGlobalRPCServer(svcCtx *svc.ServiceContext) *GlobalRPCServer {
	return &GlobalRPCServer{
		svcCtx: svcCtx,
	}
}

func (s *GlobalRPCServer) GetLatestPoolInfo(ctx context.Context, in *globalRPCProto.ReqGetLatestPoolInfo) (*globalRPCProto.RespGetLatestPoolInfo, error) {
	l := logic.NewGetLatestPoolInfoLogic(ctx, s.svcCtx)
	return l.GetLatestPoolInfo(in)
}

func (s *GlobalRPCServer) GetLatestAccountAssetInfo(ctx context.Context, in *globalRPCProto.ReqGetLatestAccountAssetInfo) (*globalRPCProto.RespGetLatestAccountAssetInfo, error) {
	l := logic.NewGetLatestAccountAssetInfoLogic(ctx, s.svcCtx)
	return l.GetLatestAccountAssetInfo(in)
}

func (s *GlobalRPCServer) GetLatestAccountInfoByAccountIndex(ctx context.Context, in *globalRPCProto.ReqGetLatestAccountInfoByAccountIndex) (*globalRPCProto.RespGetLatestAccountInfoByAccountIndex, error) {
	l := logic.NewGetLatestAccountInfoByAccountIndexLogic(ctx, s.svcCtx)
	return l.GetLatestAccountInfoByAccountIndex(in)
}

func (s *GlobalRPCServer) GetLatestAccountLp(ctx context.Context, in *globalRPCProto.ReqGetLatestAccountLp) (*globalRPCProto.RespGetLatestAccountLp, error) {
	l := logic.NewGetLatestAccountLpLogic(ctx, s.svcCtx)
	return l.GetLatestAccountLp(in)
}

func (s *GlobalRPCServer) GetLatestTxsListByAccountIndex(ctx context.Context, in *globalRPCProto.ReqGetLatestTxsListByAccountIndex) (*globalRPCProto.RespGetLatestTxsListByAccountIndex, error) {
	l := logic.NewGetLatestTxsListByAccountIndexLogic(ctx, s.svcCtx)
	return l.GetLatestTxsListByAccountIndex(in)
}

func (s *GlobalRPCServer) GetLatestTxsListByAccountIndexAndTxType(ctx context.Context, in *globalRPCProto.ReqGetLatestTxsListByAccountIndexAndTxType) (*globalRPCProto.RespGetLatestTxsListByAccountIndexAndTxType, error) {
	l := logic.NewGetLatestTxsListByAccountIndexAndTxTypeLogic(ctx, s.svcCtx)
	return l.GetLatestTxsListByAccountIndexAndTxType(in)
}

func (s *GlobalRPCServer) SendTx(ctx context.Context, in *globalRPCProto.ReqSendTx) (*globalRPCProto.RespSendTx, error) {
	l := logic.NewSendTxLogic(ctx, s.svcCtx)
	return l.SendTx(in)
}

//  pair
func (s *GlobalRPCServer) GetLpValue(ctx context.Context, in *globalRPCProto.ReqGetLpValue) (*globalRPCProto.RespGetLpValue, error) {
	l := logic.NewGetLpValueLogic(ctx, s.svcCtx)
	return l.GetLpValue(in)
}

func (s *GlobalRPCServer) GetPairRatio(ctx context.Context, in *globalRPCProto.ReqGetPairRatio) (*globalRPCProto.RespGetPairRatio, error) {
	l := logic.NewGetPairRatioLogic(ctx, s.svcCtx)
	return l.GetPairRatio(in)
}

func (s *GlobalRPCServer) GetSwapAmount(ctx context.Context, in *globalRPCProto.ReqGetSwapAmount) (*globalRPCProto.RespGetSwapAmount, error) {
	l := logic.NewGetSwapAmountLogic(ctx, s.svcCtx)
	return l.GetSwapAmount(in)
}

//  globalmap
func (s *GlobalRPCServer) ResetGlobalMap(ctx context.Context, in *globalRPCProto.ReqResetGlobalMap) (*globalRPCProto.RespResetGlobalMap, error) {
	l := logic.NewResetGlobalMapLogic(ctx, s.svcCtx)
	return l.ResetGlobalMap(in)
}
